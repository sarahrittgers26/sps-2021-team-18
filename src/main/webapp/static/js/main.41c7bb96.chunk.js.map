{"version":3,"sources":["main/webapp/components/Api/Api.js","main/webapp/components/Auth/Auth.js","main/webapp/components/Editor/Pane.js","main/webapp/components/Editor/Editor.js","main/webapp/App.js","index.js"],"names":["axios","create","baseURL","Auth","history","useState","setMainVisible","setMainDirection","signUpVisible","setSignUpVisible","signUpDirection","setSignUpDirection","signInVisible","setSignInVisible","signInDirection","setSignInDirection","username","setUsername","usernameError","setUsernameError","usernameErrorMsg","setUsernameErrorMsg","password","setPassword","passwordError","setPasswordError","passwordErrorMsg","setPasswordErrorMsg","email","setEmail","emailError","setEmailError","emailErrorMsg","setEmailErrorMsg","showMain","handleKeyPress","e","callBack","key","handleOnSignUpSubmit","error","length","RegExp","test","String","toLowerCase","validateEmail","handleOnSignInSubmit","handleSignUp","a","encodeURIComponent","post","response","status","errors","data","usernameExists","emailExists","push","message","handleSignIn","errorAndEmail","className","Paper","Grid","container","spacing","justify","alignItems","item","sm","xs","Typography","variant","color","align","Card","CardActionArea","onClick","gutterBottom","Slide","direction","in","timeout","mountOnEnter","unmountOnExit","IconButton","ArrowBack","TextField","id","label","value","helperText","onChange","target","margin","autoComplete","onKeyPress","type","Button","Pane","props","language","displayName","onBeforeChange","editor","options","lineWrapping","lint","mode","lineNumbers","theme","Editor","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useEffect","setTimeout","clearTimeout","title","sandbox","width","height","createHashHistory","App","ThemeProvider","path","exact","component","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41c7bb96.chunk.js","sourcesContent":["import axios from 'axios';\r\n//const baseUrl = 'http://localhost:8080'\r\nconst baseUrl = 'http://spring21-sps-18.appspot.com'\r\nexport default axios.create({\r\n\tbaseURL: baseUrl\r\n})\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Card,\r\n  Typography,\r\n  CardActionArea,\r\n  Slide,\r\n  TextField,\r\n  Grid,\r\n  IconButton,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\n//import { useDispatch } from 'react-redux';\r\nimport axios from '../Api/Api';\r\n\r\nconst Auth = ({ history }) => {\r\n  // Dispatch for react-redux store\r\n  // const dispatch = useDispatch();\r\n\t\r\n  // Local state control of displaying sign-in or sign-up info\r\n  const [mainVisible, setMainVisible] = useState(true);\r\n  const [mainDirection, setMainDirection] = useState('left');\r\n  const [signUpVisible, setSignUpVisible] = useState(false);\r\n  const [signUpDirection, setSignUpDirection] = useState('left');\r\n  const [signInVisible, setSignInVisible] = useState(false);\r\n  const [signInDirection, setSignInDirection] = useState('left');\r\n\r\n  // Store user's information in React state\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(false);\r\n  const [usernameErrorMsg, setUsernameErrorMsg] = useState('');\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState('');\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [emailErrorMsg, setEmailErrorMsg] = useState('');;\r\n\r\n  // Show main modal which gives user the option to signin or signup\r\n  const showMain = () => {\r\n    setMainDirection('left');\r\n    setMainVisible(true);\r\n    setSignUpVisible(false);\r\n    setSignUpDirection('right');\r\n    setSignInVisible(false);\r\n    setSignInDirection('right');\r\n  };\r\n\r\n  // Handles showing the signup window\r\n  const showSignUp = () => {\r\n    setSignUpDirection('left');\r\n    setMainDirection('right');\r\n    setSignUpVisible(true);\r\n    setMainVisible(false);\r\n    setSignInDirection('right');\r\n    setSignInVisible(false);\r\n    setUsernameErrorMsg('');\r\n    setUsernameError(false);\r\n    setPasswordErrorMsg('');\r\n    setPasswordError(false);\r\n    setEmailErrorMsg('');\r\n    setEmailError(false);\r\n  };\r\n\r\n  // Handles showing the signIn window\r\n  const showSignIn = () => {\r\n    setSignInDirection('left');\r\n    setMainDirection('right');\r\n    setSignInVisible(true);\r\n    setMainVisible(false);\r\n    setSignUpDirection('right');\r\n    setSignUpVisible(false);\r\n    setUsernameErrorMsg('');\r\n    setUsernameError(false);\r\n    setPasswordErrorMsg('');\r\n    setPasswordError(false);\r\n    setEmailErrorMsg('');\r\n    setEmailError(false);\r\n  };\r\n\r\n  // Handles and checks keypress and calls the callback method\r\n  const handleKeyPress = (e, callBack) => {\r\n    if (e.key === 'Enter') {\r\n      callBack();\r\n    };\r\n  };\r\n\r\n  // Checks that email is in a valid email address form\r\n  // Code Reference: \r\n  // https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\r\n  const validateEmail = (email) => {\r\n    // Breaks regex expression into strings to remain under 80 characters\r\n    var re = new RegExp(['^(([^<>()[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()[\\\\]\\\\\\\\.,;:\\\\s',\r\n\t    '@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]',\r\n\t    '{1,3}\\\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$']);\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  // Validates user entered sign up information correctly\r\n  const handleOnSignUpSubmit = (username, password, email, callBack) => {\r\n    let error = false;\r\n    if (username === '') {\r\n      setUsernameError(true);\r\n      setUsernameErrorMsg('Username cannot be empty');\r\n      error = true;\r\n    } else { \r\n      setUsernameError(false);\r\n      setUsernameErrorMsg('');\r\n    }\r\n    if (password.length < 8 || password.length > 60) {\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg('Password must be greater than 8 characters' \r\n\t     + ' and less than 60 characters');\r\n      error = true;\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg('');\r\n    }\r\n    if (email === '' || !validateEmail(email)) {\r\n      setEmailError(true);\r\n      setEmailErrorMsg('Please enter a valid email address format');\r\n      error = true;\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMsg('');\r\n    }\r\n\r\n    if (!error) {\r\n      callBack();\r\n    };\r\n  };\r\n  \r\n\r\n  // Checks that user entered login information correctly\r\n  const handleOnSignInSubmit = (username, password, callBack) => {\r\n    let error = false;\r\n    if (username === '') {\r\n      setUsernameError(true);\r\n      setUsernameErrorMsg('Username cannot be empty');\r\n      error = true;\r\n    } else {\r\n      setUsernameError(false);\r\n      setUsernameErrorMsg('');\r\n    }\r\n    if (password === '') {\r\n      setPasswordError(true);\r\n      setPasswordErrorMsg('Password cannot be empty');\r\n      error = true;\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMsg('');\r\n    }\r\n\r\n    if (!error) {\r\n      callBack();\r\n    };\r\n  };\r\n\r\n  // Handles creation of account\r\n  const handleSignUp = async (username, password, email) => {\r\n    try {\r\n      // Encode username, password & email they may have special symbols\r\n      username = encodeURIComponent(username);\r\n      password = encodeURIComponent(password);\r\n      email = encodeURIComponent(email);\r\n\r\n      // Check if username is taken and email is valid then add to Datastore\r\n      const response = await axios.post(\r\n               `/sign-up?username=${username}\r\n              &password=${password}&email=${email}`);\r\n\r\n      if (response.status !== 200) {\r\n        setUsernameError(true);\r\n        setUsernameErrorMsg('Unable to sign up at this time please try again');\r\n        setPasswordError(true);\r\n        setPasswordErrorMsg('Unable to sign up at this time please try again');\r\n        setEmailError(true);\r\n        setEmailErrorMsg('Unable to sign up at this time please try again');\r\n\treturn;\r\n      }\r\n\t    \r\n      // Get information about whether username or email is taken from response\r\n      const errors = response.data;\r\n      const usernameExists = errors[0];\r\n      const emailExists = errors[1];\r\n\r\n      // Let user known what type of error occurred\r\n      if (usernameExists) {\r\n\tsetUsernameError(true);\t  \r\n        setUsernameErrorMsg('Username is already taken');\r\n      }\r\n      if (emailExists) {\r\n\tsetEmailError(true);\r\n\tsetEmailErrorMsg('Email address has already been used');\r\n      }\r\n      if (usernameExists || emailExists) return;\r\n\r\n      const signInInfo = { username: username, email: email };\r\n      //dispatch(signIn(signInInfo));\r\n      history.push('/editor');\r\n    } catch (err) {\r\n      // If error occurs notify user\r\n      if (err) {\r\n        setUsernameError(true);\r\n        setUsernameErrorMsg(err.message);\r\n        setPasswordError(true);\r\n        setPasswordErrorMsg(err.message);\r\n      };\r\n    };\r\n  };\r\n  \r\n  // Handles account login\r\n  const handleSignIn = async (username, password) => {\r\n    // Encode username and password - it may have # $ & + ,  / : ; = ? @ [ ]\r\n    username = encodeURIComponent(username);\r\n    password = encodeURIComponent(password);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n               `/sign-in?username=${username}\r\n              &password=${password}`);\r\n\r\n      if (response.status === 200) {\r\n        // Direct user to next page\r\n\tconst errorAndEmail = response.data\r\n\tconst userExists = errorAndEmail[0] === 'true' ? true : false;\r\n\tif (!userExists) {\r\n\t  setUsernameError(true);\r\n\t  setUsernameErrorMsg('Username or password entered incorrectly');\r\n\t  setPasswordError(true);\r\n\t  setPasswordErrorMsg('Username or password entered incorrectly');\r\n\t} else {\r\n\t  const signInInfo = { username: username, email: errorAndEmail[1] };\r\n\t  //dispatch(signIn(signInInfo));\r\n\t  history.push('/editor'); \r\n\t}\r\n      } else {\r\n        setUsernameError(true);\r\n        setUsernameErrorMsg('Unable to sign in at this time please try again');\r\n        setPasswordError(true);\r\n        setPasswordErrorMsg('Unable to sign in at this time please try again');\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        setUsernameError(true);\r\n        setUsernameErrorMsg(err.message);\r\n        setPasswordError(true);\r\n        setPasswordErrorMsg(err.message);\r\n      };\r\n    };\r\n  };\r\n  \r\n  // Render options to sign-up or sign-in\r\n  const renderMain = () => {\r\n    return (\r\n      <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\r\n        <Grid item sm={12} xs={12}>\r\n          <Typography variant=\"h5\" color=\"primary\" align=\"center\">\r\n            Collaborative Coding\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item sm={6} xs={12}>\r\n          <Card className=\"grid-card\">\r\n            <CardActionArea onClick={() => showSignUp()}>\r\n              <Typography variant=\"h5\" color=\"primary\" gutterBottom>\r\n                Sign Up\r\n              </Typography>\r\n            </CardActionArea>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item sm={6} xs={12}>\r\n          <Card className=\"grid-card\">\r\n            <CardActionArea onClick={() => showSignIn()}>\r\n              <Typography variant=\"h5\" color=\"primary\" gutterBottom>\r\n                Sign In\r\n              </Typography>\r\n            </CardActionArea>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  \r\n   // Render signup modal with input fields for user\r\n  const renderSignUp = () => {\r\n    return (\r\n      <Slide direction={signUpDirection} in={signUpVisible} timeout={350}\r\n            mountOnEnter unmountOnExit>\r\n        <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12}>\r\n            <IconButton onClick={showMain}>\r\n              <ArrowBack />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"primary\" align=\"center\">\r\n              Sign Up\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"grid-textfield\">\r\n            <TextField\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              value={username}\r\n              error={usernameError}\r\n              helperText={usernameErrorMsg}\r\n              onChange={e => setUsername(e.target.value)}\r\n              margin=\"dense\"\r\n              autoComplete=\"off\"\r\n              variant=\"outlined\"\r\n              onKeyPress={e =>\r\n                handleKeyPress(e, () =>\r\n                  handleOnSignUpSubmit(username, password, email,\r\n                          () => handleSignUp(username, password, email))\r\n                )\r\n              }\r\n            />\r\n          </Grid>\r\n\t\t  <Grid item xs={12} className=\"grid-textfield\">\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              error={passwordError}\r\n              helperText={passwordErrorMsg}\r\n              onChange={e => setPassword(e.target.value)}\r\n              margin=\"dense\"\r\n              autoComplete=\"off\"\r\n              variant=\"outlined\"\r\n              onKeyPress={e =>\r\n                handleKeyPress(e, () =>\r\n                  handleOnSignUpSubmit(username, password, email,\r\n                          () => handleSignUp(username, password, email))\r\n                )\r\n              }\r\n            />\r\n          </Grid>\r\n\t\t  <Grid item xs={12} className=\"grid-textfield\">\r\n            <TextField\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              error={emailError}\r\n              helperText={emailErrorMsg}\r\n              onChange={e => setEmail(e.target.value)}\r\n              margin=\"dense\"\r\n              autoComplete=\"off\"\r\n              variant=\"outlined\"\r\n              onKeyPress={e =>\r\n                handleKeyPress(e, () =>\r\n                  handleOnSignUpSubmit(username, password, email,\r\n                          () => handleSignUp(username, password, email))\r\n                )\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className=\"grid-button\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleOnSignUpSubmit(username, password, email,\r\n                      () => handleSignUp(username, password, email))}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Slide>\r\n    );\r\n  }\r\n  \r\n  // Render sign in Modal with input fields\r\n  const renderSignIn = () => {\r\n    return (\r\n      <Slide direction={signInDirection} in={signInVisible} timeout={350}\r\n            mountOnEnter unmountOnExit>\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12}>\r\n            <IconButton onClick={showMain}>\r\n              <ArrowBack />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" color=\"primary\" align=\"center\">\r\n              Sign In\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"grid-textfield\">\r\n            <TextField\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              value={username}\r\n              error={usernameError}\r\n              helperText={usernameErrorMsg}\r\n              onChange={e => setUsername(e.target.value)}\r\n              margin=\"dense\"\r\n              autoComplete=\"off\"\r\n              variant=\"outlined\"\r\n              onKeyPress={e =>\r\n                handleKeyPress(e, () =>\r\n                  handleOnSignInSubmit(username, password,\r\n                          () => handleSignIn(username, password))\r\n                )\r\n              }\r\n            />\r\n          </Grid>\r\n\t\t  <Grid item xs={12} className=\"grid-textfield\">\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              error={passwordError}\r\n              helperText={passwordErrorMsg}\r\n              onChange={e => setPassword(e.target.value)}\r\n              margin=\"dense\"\r\n              autoComplete=\"off\"\r\n              variant=\"outlined\"\r\n              onKeyPress={e =>\r\n                handleKeyPress(e, () =>\r\n                  handleOnSignInSubmit(username, password,\r\n                          () => handleSignIn(username, password))\r\n                )\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className=\"grid-button\">\r\n            <Button\r\n              className=\"modal-login-button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleOnSignInSubmit(username, password,\r\n                      () => handleSignIn(username, password))}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Slide>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-wrapper\">\r\n      <Paper className=\"container-prompt\">\r\n        {renderMain()}\r\n        {renderSignUp()}\r\n        {renderSignIn()}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useState, useEffect } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport './Pane.css'\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\n\r\nfunction Pane(props) {\r\n  const {language, displayName, value, onChange} = props;\r\n  const handleChange = (editor, data, value) => {\r\n    onChange(value);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"Pane_container\">\r\n      <div className=\"Pane_title\">\r\n        {displayName}\r\n        <button className=\"Pane_minimize_button\">\r\n          <MinimizeIcon />\r\n        </button>\r\n      </div>\r\n\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"Pane_code_mirror_wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          lineNumbers: true,\r\n          theme: 'material'\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pane\r\n","import React, { useState, useEffect } from 'react'\r\nimport Pane from './Pane.js'\r\nimport './Editor.css'\r\n\r\nfunction Editor() {\r\n\r\n  const [html, setHtml] = useState(\"\");\r\n  const [css, setCss] = useState(\"\");\r\n  const [js, setJs] = useState(\"\");\r\n  const [srcDoc, setSrcDoc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrcDoc(`\r\n      <html>\r\n        <body>${html}</body>\r\n        <style>${css}</style>\r\n        <script>${js}</script>\r\n      </html>\r\n      `)\r\n    }, 250)\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [html, css, js])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Editor_pane Editor_top_pane\">\r\n        <Pane \r\n         language=\"xml\"\r\n         displayName=\"HTML\"\r\n         value={html}\r\n         onChange={setHtml}/>\r\n\r\n        <Pane \r\n         language=\"css\"\r\n         displayName=\"CSS\"\r\n         value={css}\r\n         onChange={setCss}/>\r\n\r\n        <Pane \r\n         language=\"javascript\"\r\n         displayName=\"JS\"\r\n         value={js}\r\n         onChange={setJs}/>\r\n\r\n      </div>\r\n\r\n      <div className=\"Editor_pane Editor_bottom_pane\">\r\n        <iframe \r\n          title=\"output\"\r\n          srcDoc={srcDoc}\r\n          sandbox=\"allow-scripts allow-same-origin\"\r\n          width=\"100%\"\r\n          height=\"100%\"/>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Editor\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createHashHistory } from \"history\";\r\nimport Auth from './components/Auth/Auth';\r\nimport Editor from './components/Editor/Editor'\r\n\r\nconst history = createHashHistory();\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <HashRouter history={history}>\r\n        <Route path=\"/editor\" exact component={Editor} />\r\n        <Route path=\"/\" exact component={Auth} />\r\n      </HashRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: '#6E4AB1'\r\n    },\r\n    secondary: {\r\n      main: '#000000'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontSize: 14,\r\n    fontWeightLight: 400,\r\n    fontWeightRegular: 500,\r\n    fontWeightMedium: 600\r\n  }\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/webapp/App.js';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}