{"version":3,"sources":["main/webapp/components/Api/Api.js","main/webapp/middleware/socketMiddleware.js","main/webapp/actions/types.js","main/webapp/actions/index.js","main/webapp/components/Auth/Auth.js","main/webapp/components/Editor/Pane.js","main/webapp/images/avatar-1.png","main/webapp/images/avatar-2.png","main/webapp/images/avatar-3.png","main/webapp/images/avatar-4.png","main/webapp/images/avatar-5.png","main/webapp/images/avatar-6.png","main/webapp/images/avatar-7.png","main/webapp/images/avatar-8.png","main/webapp/components/Editor/Profile.js","main/webapp/components/Editor/Navbar.js","main/webapp/components/Editor/StaticProgressBar.js","main/webapp/components/Editor/StopCollab.js","main/webapp/components/Editor/Editor.js","main/webapp/components/Projects/User.js","main/webapp/components/Projects/ConnectedUsers.js","main/webapp/components/Projects/Searchbar.js","main/webapp/components/Projects/Notification.js","main/webapp/images/banner.png","main/webapp/components/Projects/Header.js","main/webapp/components/Projects/About.js","main/webapp/components/Projects/AspectRatio.js","main/webapp/components/Projects/ProjectCard.js","main/webapp/components/Projects/ProgressSpinner.js","main/webapp/components/Projects/ConnectionDialog.js","main/webapp/components/Projects/AlertDialog.js","main/webapp/components/Projects/ProfileDialog.js","main/webapp/components/Projects/Projects.js","main/webapp/App.js","main/webapp/reducers/projectReducer.js","main/webapp/reducers/userReducer.js","main/webapp/reducers/index.js","index.js"],"names":["baseUrl","axios","create","baseURL","AppConfig","SOCKET","console","log","SocketSingleton","instance","getInstance","WebSocket","ACTION","SIGN_IN","SIGN_OUT","UPDATE_EDIT","UPDATE_LOCATION","COLLAB","CHANGE_PASSWORD","CHANGE_VISIBILITY","CHANGE_AVATAR","CHANGE_NAME","CHOOSE_PROJECT","CHOOSE_USER","UPDATE_PROJECTS","UPDATE_USERS","CLEAR_REDUCER","CLEAR_PROJECT","LOAD_INIT_PROJECTS","CREATE_PROJECT","SEND_HTML","SEND_CSS","SEND_JS","SEND_TITLE","REC_HTML","REC_CSS","REC_JS","REC_TITLE","PING_USER","REC_CREATE_PING","REC_CONTINUE_PING","SEND_LEFT","REC_LEFT","SELECT_COLLAB","projectSelector","selector","projects","selection","i","length","current","bothActive","project","collaborator","collaboratorName","projectid","title","html","css","js","collaboratorAvatar","image","push","userSelector","wantContact","users","isContact","user","username","name","isActive","avatar","signIn","type","payload","chooseProject","updateLocation","locale","selectCollab","collab","updateEdit","canEdit","clearProject","changeVis","vis","loadUsers","dispatch","a","url","get","response","contacts","data","activeUsers","loadProjects","onlineProjects","offlineProjects","Auth","history","useDispatch","useState","setUsername","usernameError","setUsernameError","usernameErrorMsg","setUsernameErrorMsg","password","setPassword","passwordError","setPasswordError","passwordErrorMsg","setPasswordErrorMsg","email","setEmail","emailError","setEmailError","emailErrorMsg","setEmailErrorMsg","setName","nameError","setNameError","nameErrorMsg","setNameErrorMsg","displaySignIn","setDisplaySignIn","displaySignUp","setDisplaySignUp","signInRef","useRef","signUpRef","onopen","openSignIn","classList","add","remove","openSignUp","handleKeyPress","e","callBack","key","handleOnSignUpSubmit","error","RegExp","test","String","toLowerCase","validateEmail","handleOnSignInSubmit","handleSignUp","encodeURIComponent","status","errors","usernameExists","emailExists","isVisible","message","handleSignIn","errorAndInfo","className","onClick","ref","required","onChange","target","value","autoComplete","onKeyPress","id","label","Pane","props","language","displayName","socket","onBeforeChange","editor","msg","JSON","stringify","send","options","lineWrapping","lint","mode","lineNumbers","theme","Profile","side","active","isUser","handleSave","handleReturn","displayMenu","setDisplayMenu","menuRef","iconRef","handleClick","callback","prevState","useEffect","style","display","handleClickOutside","event","contains","document","addEventListener","removeEventListener","src","Icon_1","Icon_2","Icon_3","Icon_4","Icon_5","Icon_6","Icon_7","Icon_8","addAvatar","alt","fontSize","Navbar","projectName","useSelector","state","userReducer","placeholder","elt","StaticProgressBar","StopCollab","open","Dialog","DialogContent","Editor","projectReducer","activeProject","collaboratorId","projecthtml","setProjectHtml","projectcss","setProjectCss","projectjs","setProjectJs","curProject","srcDoc","setSrcDoc","setProjectName","displayExit","setDisplayExit","onmessage","parse","save","setTimeout","html2canvas","querySelector","then","canvas","toBlob","blob","proj","formData","FormData","append","newHtml","newCss","newJs","newTitle","htmlUrl","cssUrl","jsUrl","titleUrl","imageUrl","post","headers","timeout","clearTimeout","sandbox","width","height","User","nameRef","offsetWidth","scrollWidth","ConnectedUsers","onActiveUserClick","onRecentUserClick","actives","map","recentContacts","Searchbar","query","searchBarRef","focus","setFocus","onFocus","onBlur","Notification","accept","decline","isNewProject","projectTitle","Header","handleLogout","displayProfile","notifications","acceptCallBack","declineCallBack","displayAbout","displayNotifications","setDisplayNotifications","notificationsRef","userIconRef","notificationIconRef","Banner","notification","indexOf","About","isOpen","closeDialog","AspectRatio","child","ProjectCard","downloadProject","continueProject","ProgressSpinner","ConnectionDialog","fromProject","optionsRef","split","answer","newProject","details","partner","messageDto","collabMesg","color","AlertDialog","ProfileDialog","currentOnlineStatus","saveProfile","updatedName","setUpdatedName","updatedPassword","setUpdatedPassword","showOnlineStatus","setShowOnlineStatus","selectedAvatar","setSelectedAvatar","changeAvatar","htmlFor","checked","Projects","searchQuery","setSearchQuery","openConnectionDialog","setOpenConnectionDialog","currentConnection","setCurrentConnection","displayedProjects","setDisplayedProjects","concat","allProjects","setAllProjects","alertWarning","setAlertWarning","openAlertDialog","setOpenAlertDialog","setAllUsers","openProfileDialog","setOpenProfileDialog","connectionAlert","setConnectionAlert","loadingProjects","setLoadingProjects","setFromProject","setNotifications","setDisplayAbout","fromLogin","info_arr","ping_type","collabAvatar","updatedNotifications","filter","notiReceived","COLLAB_ADD_PROJECT","window","onbeforeunload","onclose","interval","setInterval","pageInfo","isProjectsPage","clearInterval","getFolderName","item","word","join","resizeTimer","body","allUsersReloaded","allProjectsReloaded","allPaneIDS","forEach","paneID","includes","toUpperCase","updated","notif","not_type","info","collabId","folderName","zip","require","folder","file","generateAsync","content","saveAs","closeConnectionDialog","change","visInfo","visibility","changePassword","createHashHistory","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","App","ThemeProvider","path","exact","component","initialState","isSignedIn","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b37ad11a.chunk.js","sourcesContent":["import axios from 'axios';\n// baseUrl only needs to be set to production link when calling appengine:deploy\n// export const baseUrl = 'http://localhost:8080';\nexport const baseUrl = 'https://spring21-sps-18.appspot.com';\nexport default axios.create({\n\tbaseURL: baseUrl\n})\n","import { baseUrl } from '../components/Api/Api';\n//const LOCAL = 'ws://localhost:9000/';\n//const PRODUCTION = 'wss://spring21-team-18-bexdlzuwhq-uc.a.run.app:9000/';\n//const PRODUCTION = 'wss://spring21-sps-18.appspot.com';\nconst LOCAL = 'ws://localhost:9000/';\nconst PRODUCTION = 'wss://spring21-sps-18.appspot.com/';\n//http://34.75.137.84/\nconst AppConfig = {\n  SOCKET: baseUrl === 'https://spring21-sps-18.appspot.com' ? PRODUCTION : LOCAL,\n}\n\nconsole.log(baseUrl);\n\nconst SocketSingleton = (() => {\n  let instance;\n\n  const createInstance = () => {\n    return new WebSocket(AppConfig.SOCKET);\n  }\n  \n  return {\n    getInstance: () => {\n      if (!instance) {\n\tinstance = createInstance();\n      }\n      return instance;\n    }\n  };\n})();\n\nexport default SocketSingleton;\n","export const ACTION = {\n  SIGN_IN: \"SIGN_IN\",\n  SIGN_OUT: \"SIGN_OUT\",\n  UPDATE_EDIT: \"UPDATE_EDIT\",\n  UPDATE_LOCATION: \"UPDATE_LOCATION\",\n  COLLAB: \"COLLAB_ADD_PROJECT\",\n  CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n  CHANGE_VISIBILITY: \"CHANGE_VISIBILITY\",\n  CHANGE_AVATAR: \"CHANGE_AVATAR\",\n  CHANGE_NAME: \"CHANGE_NAME\",\n  CHOOSE_PROJECT: \"CHANGE_PROJECT\",\n  CHOOSE_USER: \"CHOOSE_USER\",\n  UPDATE_PROJECTS: \"UPDATE_PROJECTS\",\n  UPDATE_USERS: \"UPDATE_USERS\",\n  CLEAR_REDUCER: \"CLEAR_REDUCER\",\n  CLEAR_PROJECT: \"CLEAR_PROJECT\",\n  LOAD_INIT_PROJECTS: \"LOAD_INIT_PROJECTS\",\n  CREATE_PROJECT: \"CREATE_PROJECT\",\n  SEND_HTML: \"SEND_HTML\",\n  SEND_CSS: \"SEND_CSS\",\n  SEND_JS: \"SEND_JS\",\n  SEND_TITLE: \"SEND_TITLE\",\n  REC_HTML: \"REC_HTML\",\n  REC_CSS: \"REC_CSS\",\n  REC_JS: \"REC_JS\",\n  REC_TITLE: \"REC_TITLE\",\n  PING_USER: \"PING_USER\",\n  REC_CREATE_PING: \"REC_CREATE_PING\",\n  REC_CONTINUE_PING: \"REC_CONTINUE_PING\",\n  SEND_LEFT: \"SEND_LEFT\",\n  REC_LEFT: \"REC_LEFT\",\n  SELECT_COLLAB: \"SELECT_COLLAB\",\n}\n","import axios from '../components/Api/Api';\nimport SocketSingleton from '../middleware/socketMiddleware';\nimport { ACTION } from './types';\n\n// Return either online or offline projects\nconst projectSelector = (selector, projects) => {\n    const selection = [];\n    for (var i = 0; i < projects.length; i++) {\n        let current = projects[i]\n            // selector is true/false for online/offline projects\n            // if selector is true then only add online projects otherwise add offline\n        if (current.bothActive === selector) {\n            let project = {\n                collaborator: current.collaborator,\n                collaboratorName: current.collaboratorName,\n                projectid: current.projectid,\n                title: current.title,\n                html: current.html,\n                css: current.css,\n                js: current.js,\n                collaboratorAvatar: current.collaboratorAvatar,\n                image: current.image,\n            };\n            selection.push(project);\n        }\n    }\n    return selection;\n};\n\n// Return either active or inactive users\nconst userSelector = (wantContact, users) => {\n    const selection = [];\n    for (var i = 0; i < users.length; i++) {\n\n        let current = users[i]\n            // selector is true/false for online/offline projects\n            // if selector is true then only add online projects otherwise add offline\n        if (current.isContact === wantContact) {\n            let user = {\n                username: current.username,\n                name: current.name,\n                isActive: current.isActive,\n                avatar: current.avatar,\n            };\n            selection.push(user);\n        }\n    }\n    return selection;\n};\n\n// On sign in\nexport const signIn = (user) => {\n    return {\n        type: ACTION.SIGN_IN,\n        payload: user\n    }\n};\n\n// On sign out\nexport const signOut = () => ({\n    type: ACTION.SIGN_OUT,\n    payload: null\n});\n\n// Clears state on sign out\nexport const clearReducer = () => ({\n    type: ACTION.CLEAR_REDUCER,\n    payload: null\n});\n\n\n// On project selection\nexport const chooseProject = (project) => {\n    return {\n        type: ACTION.CHOOSE_PROJECT,\n        payload: project\n    }\n};\n\nexport const updateLocation = (locale) => {\n    return {\n        type: ACTION.UPDATE_LOCATION,\n        payload: locale\n    }\n};\n\nexport const selectCollab = (collab) => {\n    return {\n        type: ACTION.SELECT_COLLAB,\n        payload: collab\n    }\n};\n\nexport const updateEdit = (canEdit) => {\n    return {\n        type: ACTION.UPDATE_EDIT,\n        payload: canEdit\n    }\n};\n\n// Function to handle saving project to database\nexport const handleSave = (proj) => async(dispatch) => {\n    const newHtml = encodeURIComponent(proj.html);\n    const newCss = encodeURIComponent(proj.css);\n    const newJs = encodeURIComponent(proj.js);\n    const newTitle = encodeURIComponent(proj.title);\n    const projectid = proj.projectid;\n    const image = proj.image;\n    let htmlUrl = `/save-html?projectid=${projectid}&html=${newHtml}`;\n    let cssUrl = `/save-css?projectid=${projectid}&css=${newCss}`;\n    let jsUrl = `/save-js?projectid=${projectid}&js=${newJs}`;\n    let titleUrl = `/update-title?projectid=${projectid}&title=${newTitle}`;\n    let imageUrl = `/save-image?projectid=${projectid}`;\n    await axios.get(htmlUrl);\n    await axios.get(cssUrl);\n    await axios.get(jsUrl);\n    await axios.get(titleUrl);\n    await axios.post(imageUrl, image, {\n      headers: {\n        'accept': 'application/json',\n        'Accept-Language': 'en-US,en;q=0.8',\n        'Content-Type': `multipart/form-data`,\n      }\n    })\n  }\n  \n\n// On project deselection\nexport const clearProject = () => {\n    return {\n        type: ACTION.CLEAR_PROJECT,\n        payload: null\n    }\n};\n\n// On user selection\nexport const chooseUser = (username) => {\n    return {\n        type: ACTION.CHOOSE_USER,\n        payload: username\n    }\n};\n\n// Update online status\nexport const updateActive = (pageInfo) => async(dispatch) => {\n    const username = pageInfo.username;\n    const isVisible = pageInfo.isVisible;\n    const isProjectsPage = pageInfo.isProjectsPage;\n    if (isVisible) {\n        let url = `/update-active?username=${username}`;\n        await axios.get(url);\n    }\n\n    if (isProjectsPage) {\n        dispatch(loadProjects(username));\n        dispatch(loadUsers(username));\n    }\n};\n\n// On name change\nexport const changeName = (change) => async(dispatch) => {\n    const username = change.username;\n    const name = change.name;\n    let url = `/change-name?username=${username}&name=${name}`;\n    await axios.get(url);\n    dispatch({\n        type: ACTION.CHANGE_NAME,\n        payload: name\n    })\n};\n\n// On avatar change\nexport const changeAvatar = (change) => async(dispatch) => {\n    const username = change.username;\n    const avatar = change.avatar;\n    let url = `/change-avatar?username=${username}&avatar=${avatar}`;\n    await axios.get(url);\n    dispatch({\n        type: ACTION.CHANGE_AVATAR,\n        payload: avatar\n    })\n};\n\n// On password change\nexport const changePassword = (change) => async(dispatch) => {\n    const username = change.username;\n    const password = change.password;\n    let url = `/change-pass?username=${username}&password=${password}`;\n    await axios.get(url);\n    dispatch({\n        type: ACTION.CHANGE_PASSWORD,\n        payload: password\n    })\n};\n\nexport const changeVis = (vis) => {\n    return {\n        type: ACTION.CHANGE_VISIBILITY,\n        payload: vis\n    }\n};\n\n// On visibility change\nexport const changeVisibility = (visInfo) => async(dispatch) => {\n    const username = visInfo.username;\n    const vis = visInfo.visibility;\n    let url = `/change-vis?username=${username}&visibility=${vis}`;\n    await axios.get(url);\n    dispatch(changeVis(vis));\n};\n\n\nexport const updateTitle = (title) => {\n    return {\n        type: ACTION.UPDATE_TITLE,\n        payload: title\n    }\n};\n\n// Create project with user\nexport const createProject = (details) => async(dispatch) => {\n    const username = details.username;\n    const partner = details.collaborator;\n    const title = details.title;\n    let url = `/create?username=${username}&partner=${partner}&title=${title}`;\n    const response = await axios.post(url);\n    let projectid = response.data;\n    const socket = SocketSingleton.getInstance();\n    let messageDto = JSON.stringify({\n        id: projectid,\n        type: ACTION.LOAD_INIT_PROJECTS,\n        data: \"\"\n    })\n    socket.send(messageDto);\n    let collabMesg = JSON.stringify({\n        id: partner,\n        type: ACTION.COLLAB,\n        data: projectid\n    })\n    socket.send(collabMesg);\n    dispatch(loadProjects(username));\n};\n\n// Load users that are active and inactive \nexport const loadUsers = (username) => async(dispatch) => {\n    if (username !== '') {\n        // Load users from backend\n        let url = `/get-users?username=${username}`;\n        const response = await axios.get(url);\n        dispatch({\n            type: ACTION.UPDATE_USERS,\n            payload: {\n                contacts: userSelector(true, response.data),\n                activeUsers: userSelector(false, response.data)\n            }\n        });\n    }\n};\n\n// Load projects that are online or offline\nexport const loadProjects = (username) => async(dispatch) => {\n    if (username !== '') {\n        // Load projects from backend\n        let url = `/load?username=${username}`;\n        const response = await axios.get(url);\n        dispatch({\n            type: ACTION.UPDATE_PROJECTS,\n            payload: {\n                onlineProjects: projectSelector(true, response.data),\n                offlineProjects: projectSelector(false, response.data)\n            }\n        });\n    }\n};\n\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport axios from '../Api/Api';\nimport SocketSingleton from '../../middleware/socketMiddleware';\nimport { loadProjects, loadUsers, signIn } from '../../actions';\nimport './Auth.css';\n/*\nconst sendMail = () => async(dispatch) => {\n  let test = \"/mail?username=mdprodigy&collaborator=othermichael&title=NewProject&newProject=true\";\n  console.log(test);\n  const response = await axios.get(test);\n  console.log(test);\n}*/\n\nconst Auth = ({ history }) => {\n  // Dispatch for react-redux store\n  const dispatch = useDispatch();\n  //dispatch(sendMail())\n  // Store user's information in React state\n  const [username, setUsername] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(false);\n  const [usernameErrorMsg, setUsernameErrorMsg] = useState('');\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState('');\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [emailErrorMsg, setEmailErrorMsg] = useState('');\n  const [name, setName] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [nameErrorMsg, setNameErrorMsg] = useState('');\n\n  // to switch between sign in and sign up\n  const [displaySignIn, setDisplaySignIn] = useState(true);\n  const [displaySignUp, setDisplaySignUp] = useState(false);\n  const signInRef = useRef();\n  const signUpRef = useRef();\n\n  let socket = SocketSingleton.getInstance();\n  socket.onopen = () => {  \n    console.log('connection successful');\n  }\n\n  const openSignIn = () => {\n    if (!displaySignIn) {\n      setDisplaySignIn(true);\n      setDisplaySignUp(false);\n      setEmailError(false);\n      setNameError(false);\n      setPasswordError(false);\n      setUsernameError(false);\n      signInRef.current.classList.add(\"visible_sign_in\");\n      signInRef.current.classList.remove(\"hidden_sign_in\")\n      signUpRef.current.classList.remove(\"visible_sign_up\");\n      signUpRef.current.classList.add(\"hidden_sign_up\");\n    }\n  }\n\n  const openSignUp = () => {\n    if (!displaySignUp) {\n      setDisplaySignIn(false);\n      setDisplaySignUp(true);\n      setEmailError(false);\n      setNameError(false);\n      setPasswordError(false);\n      setUsernameError(false);\n      signInRef.current.classList.remove(\"visible_sign_in\");\n      signInRef.current.classList.add(\"hidden_sign_in\")\n      signUpRef.current.classList.add(\"visible_sign_up\");\n      signUpRef.current.classList.remove(\"hidden_sign_up\");\n    }\n  }\n\n\n  // Handles and checks keypress and calls the callback method\n  const handleKeyPress = (e, callBack) => {\n    if (e.key === 'Enter') {\n      callBack();\n    };\n  };\n\n  // Checks that email is in a valid email address form\n  // Code Reference: \n  // https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n  const validateEmail = (email) => {\n    // Breaks regex expression into strings to remain under 80 characters\n    var re = new RegExp(['^(([^<>()[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()[\\\\]\\\\\\\\.,;:\\\\s',\n      '@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]',\n      '{1,3}\\\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$']);\n    return re.test(String(email).toLowerCase());\n  }\n\n  // Validates user entered sign up information correctly\n  const handleOnSignUpSubmit = (username, password, email, name, callBack) => {\n    let error = false;\n    if (username === '') {\n      setUsernameError(true);\n      setUsernameErrorMsg('Username cannot be empty');\n      error = true;\n    } else {\n      setUsernameError(false);\n      setUsernameErrorMsg('');\n    }\n    if (password.length < 8 || password.length > 60) {\n      setPasswordError(true);\n      setPasswordErrorMsg('Password must be greater than 8 characters'\n        + ' and less than 60 characters');\n      error = true;\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMsg('');\n    }\n    if (email === '' || !validateEmail(email)) {\n      setEmailError(true);\n      setEmailErrorMsg('Please enter a valid email address format');\n      error = true;\n    } else {\n      setEmailError(false);\n      setEmailErrorMsg('');\n    }\n    if (name === '') {\n      setNameError(true);\n      setNameErrorMsg('Name cannot be empty');\n      error = true;\n    } else {\n      setNameError(false);\n      setNameErrorMsg('');\n    }\n\n    if (!error) {\n      callBack();\n    };\n  };\n\n  // Checks that user entered login information correctly\n  const handleOnSignInSubmit = (username, password, callBack) => {\n    let error = false;\n    if (username === '') {\n      setUsernameError(true);\n      setUsernameErrorMsg('Username cannot be empty');\n      error = true;\n    } else {\n      setUsernameError(false);\n      setUsernameErrorMsg('');\n    }\n    if (password === '') {\n      setPasswordError(true);\n      setPasswordErrorMsg('Password cannot be empty');\n      error = true;\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMsg('');\n    }\n\n    if (!error) {\n      callBack();\n    };\n  };\n\n  // Handles creation of account\n  const handleSignUp = async (username, password, email, name) => {\n    try {\n      // Encode username, password & email they may have special symbols\n      username = encodeURIComponent(username);\n      password = encodeURIComponent(password);\n      name = encodeURIComponent(name);\n\n      // Check if username is taken and email is valid then add to Datastore\n      const response = await axios.get(\n        `/sign-up?username=${username}\n              &password=${password}&email=${email}&name=${name}`);\n\n      if (response.status !== 200) {\n        setUsernameError(true);\n        setUsernameErrorMsg('Unable to sign up at this time please try again');\n        setPasswordError(true);\n        setPasswordErrorMsg('Unable to sign up at this time please try again');\n        setEmailError(true);\n        setEmailErrorMsg('Unable to sign up at this time please try again');\n        setNameError(true);\n        setNameErrorMsg('Unable to sign up at this time please try again');\n        return;\n      }\n\n      // Get information about whether username or email is taken from response\n      const errors = response.data;\n      const usernameExists = errors[0];\n      const emailExists = errors[1];\n\n      // Let user known what type of error occurred\n      if (usernameExists) {\n        setUsernameError(true);\n        setUsernameErrorMsg('Username is already taken');\n      }\n      if (emailExists) {\n        setEmailError(true);\n        setEmailErrorMsg('Email address has already been used');\n      }\n      if (usernameExists || emailExists) return;\n      dispatch(signIn({\n        username: username, email: email, name: name, avatar: \"0\",\n\t      isVisible: true\n      }));\n      dispatch(loadUsers(username));\n      dispatch(loadProjects(username));\n      history.push('/projects');\n    } catch (err) {\n      // If error occurs notify user\n      if (err) {\n        setUsernameError(true);\n        setUsernameErrorMsg(err.message);\n        setPasswordError(true);\n        setPasswordErrorMsg(err.message);\n      };\n    };\n  };\n\n  // Handles account login\n  const handleSignIn = async (username, password) => {\n    // Encode username and password - it may have # $ & + ,  / : ; = ? @ [ ]\n    username = encodeURIComponent(username);\n    password = encodeURIComponent(password);\n\n    try {\n      const response = await axios.get(\n        `/sign-in?username=${username}\n              &password=${password}`);\n\n      if (response.status === 200) { \n        // Direct user to next page\n        const errorAndInfo = response.data;\n        const userExists = errorAndInfo[0] === 'true' ? true : false;\n        if (!userExists) {\n          setUsernameError(true);\n          setUsernameErrorMsg('Username or password entered incorrectly');\n          setPasswordError(true);\n          setPasswordErrorMsg('Username or password entered incorrectly');\n        } else {\n          const isVisible = errorAndInfo[3] === 'true' ? true : false;\n          dispatch(signIn({\n            username: username, email: errorAndInfo[1],\n            name: errorAndInfo[2], isVisible: isVisible, avatar: errorAndInfo[4]\n          }));\n          dispatch(loadUsers(username));\n          dispatch(loadProjects(username));\n          history.push('/projects');\n        }\n      } else {\n        setUsernameError(true);\n        setUsernameErrorMsg('Unable to sign in at this time please try again');\n        setPasswordError(true);\n        setPasswordErrorMsg('Unable to sign in at this time please try again');\n      }\n    } catch (err) {\n      if (err) {\n        setUsernameError(true);\n        setUsernameErrorMsg(err.message);\n        setPasswordError(true);\n        setPasswordErrorMsg(err.message);\n      };\n    };\n  };\n\n  //Render signup modal with input fields for user\n  const renderSignUp = () => {\n    return (\n      <div className=\"user_details\">\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            id=\"name_input\"\n            required=\"required\"\n            label=\"name_input\"\n            className=\"Auth_input\"\n            onChange={e => setName(e.target.value)}\n            value={name}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignUpSubmit(username, password, email, name,\n                  () => handleSignUp(username, password, email, name))\n              )\n            }\n          />\n          <span className=\"placeholder\">\n            Name\n          </span>        \n        </div>\n        {nameError && (\n            <span className=\"error\">{nameErrorMsg}</span>)}\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            label=\"username_input\"\n            required=\"required\"\n            className=\"Auth_input\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignInSubmit(username, password,\n                  () => handleSignIn(username, password))\n              )\n            }\n          />\n          <span className=\"placeholder\">\n            Username\n          </span>\n        </div>\n        {usernameError && (\n            <span className=\"error\">{usernameErrorMsg}</span>)}\n        <div className=\"input\">\n          <input\n            type=\"password\"\n            required=\"required\"\n            label=\"password_input\"\n            className=\"Auth_input\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignInSubmit(username, password,\n                  () => handleSignIn(username, password))\n              )\n            }\n          />\n          <span className=\"placeholder\">\n            Password\n          </span>\n        </div>\n        {passwordError && (\n            <span className=\"error\">{passwordErrorMsg}</span>)}\n\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            required=\"required\"\n            label=\"email_input\"\n            className=\"Auth_input\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignUpSubmit(username, password, email, name,\n                  () => handleSignUp(username, password, email, name))\n              )\n            }\n          />\n          <span className=\"placeholder\">\n            Email\n          </span>\n          \n        </div>\n        {emailError && (\n            <span className=\"error\">{emailErrorMsg}</span>)}\n        <div className=\"Sign_up_button_container\">\n          <button\n            className=\"Sign_up_button\"\n            onClick={() => handleOnSignUpSubmit(username, password, email, name,\n              () => handleSignUp(username, password, email, name))}\n          >\n            Sign Up\n            </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Render sign in Modal with input fields\n  const renderSignIn = () => {\n    return (\n\n      <div className=\"user_details\">\n        <div className=\"input\">\n        \n          <input\n            type=\"text\"\n            name=\"username_input\"\n            className=\"Auth_input\"\n            required=\"required\"\n            onChange={e => setUsername(e.target.value)}\n            value={username}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignInSubmit(username, password,\n                  () => handleSignIn(username, password))\n              )\n            } />\n          <span className=\"placeholder\">\n          Username\n          </span>\n        </div>\n          {usernameError && (\n            <span className=\"error\">{usernameErrorMsg}</span>\n          )}\n\n        <div className=\"input\">\n          <input\n            type=\"password\"\n            required=\"required\"\n            name=\"password_input\"\n            className=\"Auth_input\"\n            onChange={e => setPassword(e.target.value)}\n            value={password}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignInSubmit(username, password,\n                  () => handleSignIn(username, password))\n              )\n            } />\n          <span className=\"placeholder\">\n            Password\n          </span>\n        </div>\n        {passwordError && (\n            <span className=\"error\">{passwordErrorMsg}</span>\n          )}\n\n        <div className=\"Sign_in_button_container\">\n          <button\n            className=\"Sign_up_button\"\n            onClick={() => handleOnSignInSubmit(username, password,\n              () => handleSignIn(username, password))}>\n            Log In\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n\n  return (\n    <div className=\"Auth_container\">\n      <div className=\"Auth_header\">\n\n        <div className=\"nine\">\n          <h1>COLLABCODE<span> code, create, and collaborate</span></h1>\n        </div>\n      </div>\n\n\n      <div className=\"Auth_main\">\n        <div className=\"Auth_content card\">\n          <div className=\"Auth_buttons_container\">\n            {displaySignIn ? (\n            <button className=\"Auth_button left_button\" onClick={openSignIn}>\n              SIGN IN\n            </button>) :\n\n            <button className=\"Auth_button left_button \" onClick={openSignUp}>\n              SIGN UP\n            </button> }\n          </div>\n\n          <div className=\"Signin_signup\">\n            <div className=\"dummy_sign_in visible_sign_in\" ref={signInRef} >\n              {renderSignIn()}\n            </div>\n\n            <div className=\"dummy_sign_up hidden_sign_up\" ref={signUpRef}>\n              {renderSignUp()}\n            </div>\n          </div>\n          \n          {displaySignIn ? \n            (<h5><span>New to CollabCode?</span></h5>) :\n            (<h5><span>Already have an account?</span></h5>)}\n          \n          {!displaySignIn ? (\n            <button className=\"Auth_button right_button\" onClick={openSignIn}>\n              SIGN IN\n            </button>) :\n\n            <button className=\"Auth_button right_button \" onClick={openSignUp}>\n              SIGN UP\n            </button> }\n\n        </div>\n\n      </div>\n\n    </div>\n\n\n  );\n}\n\nexport default Auth;\n","import React from 'react';\n//import MinimizeIcon from '@material-ui/icons/Minimize';\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport './Pane.css';\n\nconst Pane = (props) => {\n  const { language, displayName, value, socket, projectid } = props;\n  \n  const handleChange = (editor, data, value) => {\n    let type = \"SEND_\" + displayName;\n    let msg = JSON.stringify({ id: projectid, type: type, data: value })\n    socket.send(msg);\n  } \n\n  return (\n    <div className=\"Pane_container\">\n      <div className=\"Pane_title\">\n        {displayName}\n      </div>\n\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"Pane_code_mirror_wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          lineNumbers: true,\n          theme: 'material'\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Pane\n","export default __webpack_public_path__ + \"static/media/avatar-1.206df2ea.png\";","export default __webpack_public_path__ + \"static/media/avatar-2.ce1e904e.png\";","export default __webpack_public_path__ + \"static/media/avatar-3.ba79463c.png\";","export default __webpack_public_path__ + \"static/media/avatar-4.607dde39.png\";","export default __webpack_public_path__ + \"static/media/avatar-5.1cc5e5b8.png\";","export default __webpack_public_path__ + \"static/media/avatar-6.af51b5dd.png\";","export default __webpack_public_path__ + \"static/media/avatar-7.61998959.png\";","export default __webpack_public_path__ + \"static/media/avatar-8.d272d87a.png\";","import React, { useEffect, useRef, useState } from 'react';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport './Profile.css';\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\n\n// Change email to some other parameter later, don't want to expose\n// people's emails unnecessarily\nconst Profile = (props) => {\n  const {name, avatar, email, side, active, isUser, handleSave, \n\t  handleReturn} = props;\n  const [displayMenu, setDisplayMenu] = useState(false);\n  const menuRef = useRef();\n  const iconRef = useRef();\n\n  const handleClick = callback => {\n    setDisplayMenu(prevState => !prevState);\n    callback();\n  }\n\n  const addAvatar = () => {\n    switch (avatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  } \n \n  useEffect(() => {\n    displayMenu ? menuRef.current.style.display = \"flex\" : menuRef.current.style.display = \"none\";\n     const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target) && \n          iconRef.current && !iconRef.current.contains(event.target) && displayMenu) {      \n        setDisplayMenu(prevState => !prevState);     \n      }\n    };\n  \n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n\n  }, [displayMenu]);\n\n\n  return (\n    <div className={`Profile_container ${side === \"R\" ? \"Profile_flipped\" : \"\"}`}>\n      <div className={`Profile_image ${!isUser ? \"other_user\" : \"\"}`}\n        ref={iconRef} \n          onClick={() => setDisplayMenu(prevState => !prevState)}>\n          {avatar !== \"0\" ?\n          (<img src={addAvatar()} className=\"Profile_icon\" alt=\"avatar\"/>) : \n          (<AccountCircleIcon style = {{fontSize: 40}} />)}\n          <div className={`Profile_activity ${active ? \"active_user\" : \"inactive_user\"} ${side === \"R\" ? \"right\" : \"left\"}`}></div>      </div>\n      <div className={`Profile_details  ${side === \"R\" ? \"details_right\" : \"details_left\"}`}>\n        <span className=\"Profile_name\">\n          {name}\n        </span>\n        <span className=\"Profile_email\">\n          {email}\n        </span>\n      </div>\n      {isUser ?\n        <div className=\"Editor_profile_menu\" ref={menuRef}>       \n          <span className=\"Editor_options\">\n            Options\n          </span>         \n          <ul>\n            <li onClick={() => handleClick(handleSave)}>\n              <SaveIcon className=\"Editor_profile_menu_icon\"/>\n              <span>\n                Save project\n              </span>\n            </li>\n            <li onClick={() => handleClick(handleReturn)}>\n              <ExitToAppIcon className=\"Editor_profile_menu_icon\"/>\n              <span>\n                Return to projects page\n              </span>\n            </li>\n          </ul>\n        </div>\n       : <div ref={menuRef}></div> \n      }\n    </div>\n  );\n}\n\nexport default Profile\n","import { useSelector, useDispatch } from 'react-redux';\nimport './Navbar.css';\nimport Profile from './Profile.js';\nimport { ACTION } from '../../actions/types.js';\nimport { clearProject, updateEdit } from '../../actions';\n\nconst Navbar = (props) => {\n  const { title, projectName, handleSave, \n\t  history, socket, projectid, collaborator, collaboratorName, \n\t  collaboratorAvatar } = props;\n  const user = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const handleChange = elt => {\n    let msg = JSON.stringify({ type: ACTION.SEND_TITLE, id: projectid, \n\t    data: elt.target.value })\n    socket.send(msg);\n  }\n\n  // called when user clicks on Profile\n  const handleReturn = () => {\n    handleSave();\n    let msg = JSON.stringify({ id: collaborator, type: ACTION.SEND_LEFT, \n\t    data: collaboratorName });\n    socket.send(msg);\n    dispatch(updateEdit(false));\n    history.push('/projects');\n    dispatch(clearProject())\n  }\n\n\n  return (\n      <div className=\"Navbar_container\">\n        <Profile\n          name={collaboratorName}\n          avatar={collaboratorAvatar}\n          email=\"\"\n          side=\"L\"\n          active={true}\n          isUser={false}\n\t        handleReturn={handleReturn}\n          handleSave={handleSave}/>\n\n        <div className=\"Navbar_title_container\">\n          <input \n            type=\"text\"\n            className=\"Navbar_title\"\n            placeholder={title}\n            name=\"title_input\" \n            autoComplete=\"off\" \n            id=\"title_input\"\n            value={projectName}\n            onChange={handleChange}/>\n        </div>\n        \n        <Profile\n          name={user.name}\n          avatar={user.avatar}\n          side=\"R\"\n          active={true}\n          isUser={true}\n\t        handleReturn={handleReturn}\n          handleSave={handleSave}/>\n      </div>\n  );\n}\n\nexport default Navbar\n","import React from 'react';\nimport './StaticProgressBar.css';\n\nconst StaticProgressBar = () => {\n  return (\n    <div className=\"StaticProgress_container\">\n      <div className=\"static_line\"></div>\n    </div>\n  );\n}\n\nexport default StaticProgressBar\n","import React from 'react';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport './StopCollab.css';\nimport './StaticProgressBar.js';\nimport InfoIcon from '@material-ui/icons/Info';\nimport StaticProgressBar from './StaticProgressBar.js';\n\nconst StopCollab = (props) => {\n  const { collaboratorName, open } = props; \n  return (\n    <Dialog open={open}>\n      <DialogContent>\n        <div className=\"StopCollab_container\"> \n          <div className=\"dialog_icon\">\n            <InfoIcon style={{fontSize: 40}}/>\n          </div>\n          <span className=\"StopCollab_header\">\n            {collaboratorName} has stopped  editing. Your work is being saved now...\n          </span>\n          <StaticProgressBar />\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default StopCollab\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Pane from './Pane.js';\nimport Navbar from './Navbar.js';\nimport './Editor.css';\nimport './StopCollab.js';\nimport html2canvas from 'html2canvas';\nimport FormData from 'form-data'\nimport { handleSave, clearProject, updateEdit } from '../../actions';\nimport SocketSingleton from '../../middleware/socketMiddleware';\nimport { ACTION } from '../../actions/types.js';\nimport StopCollab from './StopCollab.js';\n\nconst Editor = ({ history }) => {\n  const dispatch = useDispatch();\n  const { html, css, js, title, activeProject, collaboratorId, \n\t  collaboratorName, collaboratorAvatar } = \n\t\tuseSelector((state) => state.projectReducer);\n  const [projecthtml, setProjectHtml] = useState(html);\n  const [projectcss, setProjectCss] = useState(css);\n  const [projectjs, setProjectJs] = useState(js);\n  const [curProject, setCurProject] = useState(activeProject);\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [projectName, setProjectName] = useState(title);\n  const [displayExit, setDisplayExit] = useState(false);\n  const socket = SocketSingleton.getInstance();\n\n  socket.onmessage = (response) => {\n    let message = JSON.parse(response.data);\n    switch (message.type) {\n      case ACTION.SEND_HTML:\n\tsetProjectHtml(message.data);\n\tbreak;\n      case ACTION.SEND_CSS:\n\tsetProjectCss(message.data);\n\tbreak;\n      case ACTION.SEND_JS:\n\tsetProjectJs(message.data);\n\tbreak;\n      case ACTION.SEND_TITLE:\n\tsetProjectName(message.data);\n\tbreak;\n      case ACTION.SEND_LEFT:\n        save();\n        setDisplayExit(true);\n        setTimeout(() => {\n\t  dispatch(updateEdit(false));\n\t  dispatch(clearProject());\n          history.push('/projects');\n\t}, 2000);\n\tbreak;\n      default:\n        //return () => clearTimeout(timer);\n    }\n  }\n\n  const save = () => {\n    html2canvas(document.querySelector(\"#render_pane\")).then(canvas => {\n      canvas.toBlob((blob) => {\n        let formData = new FormData();\n        formData.append(\"image\", blob);\n        dispatch(handleSave({\n          html: projecthtml,\n          css: projectcss,\n          js: projectjs,\n          projectid: curProject,\n          title: projectName,\n          image: formData,\n        }));\n      });\n    })\n  }\n  \n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body>${projecthtml}</body>\n        <style>${projectcss}</style>\n        <script>${projectjs}</script>\n      </html>\n      `)\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [projecthtml, projectcss, projectjs]);\n\n  return (\n    <div className=\"Editor_container\">\n      <Navbar\n        history={history}\n        projectName={projectName}\n        socket={socket}\n        title={title}\n        collaborator={collaboratorId}\n        collaboratorName={collaboratorName}\n        collaboratorAvatar={collaboratorAvatar}\n        projectid={activeProject}\n        handleSave={save}/>\n\n      <div className=\"Editor_pane Editor_top_pane\" id=\"render_pane\">\n        <Pane \n         language=\"xml\"\n         displayName=\"HTML\"\n         value={projecthtml}\n         socket={socket}\n         projectid={activeProject}/>\n\n        <Pane \n         language=\"css\"\n         displayName=\"CSS\"\n         value={projectcss}\n         socket={socket}\n         projectid={activeProject}/>\n\n        <Pane \n         language=\"javascript\"\n         displayName=\"JS\"\n         value={projectjs}\n\t socket={socket}\n       \t projectid={activeProject}/>\n\n      </div>\n\n      <div id=\"render_pane\" className=\"Editor_pane Editor_bottom_pane\">\n        <iframe \n          title=\"output\"\n          srcDoc={srcDoc}\n          sandbox=\"allow-scripts allow-same-origin\"\n          width=\"100%\"\n          height=\"100%\"/>\n      </div>\n\n      <StopCollab \n        collaboratorName={collaboratorName}\n        open={displayExit}/>\n    </div>\n  );\n}\n\nexport default Editor;\n","import React, { useEffect, useRef } from 'react';\nimport './User.css';\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst User = (props) => {\n  const { name, isActive, onClick, avatar } = props;\n  const nameRef = useRef();\n\n  const isOverflowing = (elt) => {\n    return elt.offsetWidth < elt.scrollWidth;\n  }\n\n  // add scroll effect when text overflows\n  useEffect(() => {\n    if (isOverflowing(nameRef.current)) {\n      nameRef.current.classList.add(\"marquee\");\n    }\n  });\n\n\n  const addAvatar = () => {\n    switch (avatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  }\n\n  return (\n    <div className=\"User_container\" onClick={onClick}>\n      <div className=\"User_image_container\">\n        <div className=\"User_image\">\n          {avatar !== \"0\" ?\n            (<img src={addAvatar()} className=\"current_icon\" alt=\"Current avatar\"/>) : \n            (<AccountCircleIcon style = {{fontSize: 40}} />)}\n            <div className=\"User_activity\">\n              {isActive ?\n              <div className=\"active\"></div> :\n              <div className=\"inactive\"></div>}\n            </div>\n\t          \n        </div>\n      </div>\n      <span className=\"User_name\" ref={nameRef}>\n        {name}\n      </span>\n    </div>\n  );\n}\n\nexport default User\n\n","import React from 'react';\nimport './ConnectedUsers.css';\nimport User from './User.js';\n\nconst ConnectedUsers = (props) => {\n  const { activeUsers, contacts, onActiveUserClick, onRecentUserClick, isVisible } = props;\n  const actives = activeUsers.map((user) => (\n   <User\n      key={user.username}\n      name={user.name}\n      isActive={user.isActive}\n      onClick={() => onActiveUserClick(user.name, user.username, user.avatar)}\n      avatar={user.avatar}/>\n  ));\n\n  const recentContacts = contacts.map((user) => (\n    <User\n      key={user.username}\n      name={user.name}\n      isActive={user.isActive}\n      onClick={() => onRecentUserClick(user.username, user.name, user.isActive, user.avatar)}\n      avatar={user.avatar}/>\n  ));\n\n  return (\n    <div className=\"ConnectedUsers_container card\">\n      <span className=\"ConnectedUsers_label\">Recent contacts</span>\n      {recentContacts.length > 0 && isVisible? \n        recentContacts : \n        (<span className=\"no_users\">No recent contacts</span>)}\n\n      <span className=\"ConnectedUsers_label top\">Active users</span>\n      {actives.length > 0 && isVisible? \n        actives : \n        (<span className=\"no_users\">No active users</span>)}\n    </div>\n  );\n}\n\nexport default ConnectedUsers\n","import React, { useEffect, useRef, useState } from 'react';\nimport './Searchbar.css';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst Searchbar = (props) => {\n  const { query, onChange } = props;\n  const searchBarRef = useRef();\n  const [focus, setFocus] = useState(false);\n\n  const handleChange = elt => {\n    onChange(elt.target.value);\n  }\n\n  useEffect(() => {\n    focus ? \n      searchBarRef.current.classList.add(\"Searchbar_container_focused\") : \n      searchBarRef.current.classList.remove(\"Searchbar_container_focused\");\n  }, [focus]);\n\n  return (\n    <div className=\"Searchbar_container card\" ref={searchBarRef}>\n      <div className=\"Searchbar_icon_container\">\n        <SearchIcon className=\"Searchbar_icon\"/>\n      </div>\n      \n      <input \n        type=\"text\"\n        value={query}\n        onChange={handleChange}\n        placeholder=\"Search for a project\"\n        onFocus={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n        className=\"Searchbar_input\"/>\n    </div>\n  );\n}\n\nexport default Searchbar\n","import React from 'react';\nimport \"./Notification.css\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\n\n\nconst Notification = (props) => {\n  const { collaboratorName, accept, decline, isNewProject, projectTitle, collaboratorAvatar } = props;\n\n  const addAvatar = () => {\n    switch (collaboratorAvatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  } \n\n  const getMessage = (create) => {\n    if (create) {\n      return `${collaboratorName} is inviting you to CREATE a new project`\n    } else {\n      return `${collaboratorName} is inviting you to CONTINUE working on ${projectTitle}`\n    }\n  }\n  \n  return (\n    <div className=\"Notification_container\">\n      <div className=\"user_icon\">\n      {collaboratorAvatar !== \"0\" ?\n        (<img src={addAvatar()} className=\"current_icon\" alt=\"Current avatar\"/>) : \n        (<AccountCircleIcon style = {{fontSize: 40}} />)}\n      </div>\n\n      <div className=\"Notification_side\">     \n        <span className=\"Notification_title\">\n          {getMessage(isNewProject)}\n        </span>\n\n        <div className=\"Notification_buttons\">\n        <button className=\"Notification_button_decline\" onClick={decline}>DECLINE</button>\n        <button className=\"Notification_button_accept\" onClick={accept}>ACCEPT</button>\n      </div>   \n      </div> \n    </div>\n  )\n}\n\nexport default Notification\n","export default __webpack_public_path__ + \"static/media/banner.c68bbcc5.png\";","import React, { useEffect, useRef, useState } from 'react';\nimport './Header.css';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport InfoIcon from '@material-ui/icons/Info';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Notification from './Notification.js';\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\nimport Banner from \"../../images/banner.png\";\n\n\nconst Header = (props) => {\n  const { name, email, handleLogout, displayProfile, notifications, avatar, accept, decline,\n  acceptCallBack, declineCallBack, displayAbout } = props;\n  const [displayMenu, setDisplayMenu] = useState(false);\n  const [displayNotifications, setDisplayNotifications] = useState(false);\n  const menuRef = useRef();\n  const notificationsRef = useRef();\n  const userIconRef = useRef();\n  const notificationIconRef = useRef();\n\n\n  const addAvatar = () => {\n    switch (avatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  } \n\n\n  const handleClick = callback => {\n    setDisplayMenu(prevState => !prevState);\n    callback();\n  }\n\n  const renderNotifications = () => {\n    return notifications.map((notification) => (\n      <Notification\n        key={`Notification_${notifications.indexOf(notification)}`}\n        collaboratorName={notification.collaboratorName}\n        accept={() => accept(notification, \n\t\t      () => acceptCallBack(notification.type, notification.proj))}\n        decline={() => decline(notification, \n\t\t      () => declineCallBack(notification.collaborator, notification.type))}\n        isNewProject={notification.isNewProject}\n        projectTitle={notification.projectTitle}\n        collaboratorAvatar={notification.collaboratorAvatar}/>\n     ));\n  }\n\n\n  useEffect(() => {\n    displayNotifications ? notificationsRef.current.style.display = \"flex\" : notificationsRef.current.style.display = \"none\";\n     const handleClickOutside = (event) => {\n      if (notificationsRef.current && !notificationsRef.current.contains(event.target) && \n          notificationIconRef.current && !notificationIconRef.current.contains(event.target) && displayNotifications) {      \n        setDisplayNotifications(false);     \n      }\n    };\n  \n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n\n  }, [displayNotifications]);\n\n  useEffect(() => {\n    if (notifications.length == 0) {\n      document.title = \"COLLABCODE\";\n    } else {\n      document.title = `(${notifications.length}) COLLABCODE`;\n    }\n  }, [notifications]);\n\n  useEffect(() => {\n    displayMenu ? menuRef.current.style.display = \"flex\" : menuRef.current.style.display = \"none\";\n     const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target) && \n          userIconRef.current && !userIconRef.current.contains(event.target) && displayMenu) {      \n        setDisplayMenu(false);     \n      }\n    };\n  \n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n\n  }, [displayMenu]);\n\n/*  const reload = () => {\n    history.push(\"/projects\");\n  }\n*/\n  return (\n    <div className=\"Header_container\">\n      <div className=\"Banner\">\n        <img src={Banner} alt=\"Banner\" className=\"main_icon\" onClick={displayAbout}/>\n      </div>\n\n      <div className=\"Header_user\">\n        <div \n          className={`Header_notifications_icon ${notifications.length > 0 && !displayNotifications ? \n            \"notification_animation\" : \"\"}`}\n          ref={notificationIconRef}>\n          <NotificationsIcon style={{ fontSize: 40 }}\n          onClick={() => setDisplayNotifications(prevState => !prevState)}/>\n\n          {notifications.length > 0 && (\n            <div className=\"Notifications_count_container\">\n              <span className=\"Notifications_count\">{notifications.length}</span>\n            </div>)}\n        </div>\n\n        <div className=\"Header_user_icon\" \n          ref={userIconRef} \n          onClick={() => setDisplayMenu(prevState => !prevState)}>\n          {avatar !== \"0\" ?\n            (<img src={addAvatar()} className=\"current_icon\" alt=\"Current avatar\"/>) : \n            (<AccountCircleIcon style = {{fontSize: 40}} />)}\n        </div>\n\n        <div className=\"Header_notifications menu\" ref={notificationsRef}>\n          {notifications.length > 0 ? ( \n            <div className=\"Notification_main\">\n              <span className=\"Notifications_title\">Notifications</span>          \n              {renderNotifications()}\n            </div>\n                    \n            ) : (\n            <span className=\"no_notifications\">\n              You do not have any notifications\n            </span>\n          )}       \n        </div>\n\n\n        <div className=\"Header_menu menu\" ref={menuRef}>\n          <div className=\"Header_user_details\">\n            <span className=\"Header_user_name\">\n              {name}\n            </span>\n            <span className=\"Header_user_email\">\n              {email}\n            </span>\n          </div>\n          <ul>\n            <li onClick={() => handleClick(displayProfile)}>\n              <InfoIcon className=\"Header_menu_icon\"/>\n              <span>\n                Profile\n              </span>\n            </li>\n            <li onClick={() => handleClick(handleLogout)}>\n              <ExitToAppIcon className=\"Header_menu_icon\"/>\n              <span>\n                Logout\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header\n","import React from 'react'\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport './About.css'\n\nconst About = (props) => {\n  const {isOpen, closeDialog} = props;\n  return (\n    <Dialog open={isOpen}>\n    <DialogContent>\n      <div className=\"About_container\">\n        <div className=\"fixed\">\n          <span className=\"About_header\">\n            About\n          </span>\n        </div>\n        <div className=\"About_content\">\n          <span className=\"About_message\">\n            COLLABCODE is a platform that allows users to learn the basics of web development\n            collaboratively. Any two online users can connect by creating a collaborative project to live code \n            basic HTML, CSS and Javascript code while getting immediate feedback. \n          </span>\n\n          <span className=\"About_message below\">\n            To use CODECOLLAB, you have to select any user who is online to send a request to\n            create a new project. Once the project has been created, you can then send an invitation\n            to your partner to start collaborating on the new project by clicking continue on the project tile.\n          </span>\n\n          <span className=\"About_message below\">\n            To encourage collaboration amongst students, you can only work on a project while\n            you and your partner are both online and editing together. However, you also have an option to download the \n            project files and continue working offline.\n          </span>\n\n          <span className=\"About_message below\">\n            If you do not want to receive invitations to collaborate from other users while using the application, you can hide your \n            online status by updating your profile settings. However, while your online status is hidden, you will not be able to\n            collaborate with other users or to see other online users.\n          </span>\n        </div>\n\n        <div className=\"About_button_container\">\n            <button className=\"About_button\" onClick={closeDialog}>CLOSE</button>\n          </div>\n      </div>\n    </DialogContent>\n  </Dialog>\n  )\n}\n\nexport default About;\n","import React from 'react';\nimport \"./AspectRatio.css\";\n\nconst AspectRatio = (child) => {\n  return (\n    <div className=\"AspectRatio\">\n      <div className=\"AspectRatio-innerWrapper\">{child}</div>\n    </div>\n  );\n}\n\nexport default AspectRatio;\n","import React from 'react';\nimport './ProjectCard.css';\nimport AspectRatio from './AspectRatio.js';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nconst ProjectCard = (props) => {\n  const { title, collaboratorName, downloadProject, continueProject, image } = props;\n\n  return (\n    <div className=\"Project_container card\">\n      {AspectRatio(\n        <div className=\"Project_icon\">\n          <img src={image} alt=\"Project Icon\" className=\"Project_image\"/>\n        </div>\n      )}    \n      <span className=\"Project_title\">\n        {title}\n      </span>\n      <span className=\"Project_collaborator\">\n        {`Collaborator: ${collaboratorName}`}\n      </span>\n\n      <div className=\"Project_options\">\n        <button className=\"download\" onClick={downloadProject}>\n          <GetAppIcon />\n          <span className=\"button_text\">\n            Download\n          </span>\n        </button>\n\n        <button className=\"continue\" onClick={continueProject}>\n          <PlayArrowIcon />\n          <span className=\"button_text\">\n            Continue\n          </span>\n        </button>\n      </div>\n       \n    </div>\n  );\n}\n\nexport default ProjectCard\n","import React from 'react';\nimport './ProgressSpinner.css';\n\nconst ProgressSpinner = () => {\n  return (\n    <div className=\"Progress_container\">\n      <div className=\"line-base\"></div>\n      <div className=\"line\"></div>\n    </div>\n  );\n}\n\nexport default ProgressSpinner\n","import React, { useRef } from 'react';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './ConnectionDialog.css';\nimport ProgressSpinner from './ProgressSpinner.js';\nimport { updateEdit, createProject, loadProjects, selectCollab } from '../../actions';\nimport { ACTION } from '../../actions/types.js'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\n\nconst ConnectionDialog = (props) => {\n  const dispatch = useDispatch();\n  const { collaboratorId, collaboratorName, isOpen, closeDialog, fromProject, \n\t  message, socket, isActive, /*history,*/ notifications } = props;\n  const optionsRef = useRef();\n  const user = useSelector((state) => state.userReducer);\n  const { activeProject, title } = useSelector((state) => state.projectReducer);\n\n  socket.onmessage = (response) => {\n    let message = JSON.parse(response.data)\n    let type = message.data.split(\"-\")\n    let answer = type[0];\n    switch (message.type) {\n      case ACTION.REC_CREATE_PING:\n        if(answer === \"yes\"){\n\t   newProject();\n        } else {\n          closeDialog();\n        }\n\tbreak;\n      case ACTION.REC_CONTINUE_PING:\n        if(answer === \"yes\"){\n\t  dispatch(selectCollab({ username: collaboratorId, name: collaboratorName, \n\t\t  avatar: type[1] }));\n\t  dispatch(updateEdit(true));\n          //history.push(\"/editor\");\n        } else {\n          closeDialog();\n        }\n\t    break;\n      default:\n    }\n  }\n\n  const displayConnectionStatus = () => {\n    optionsRef.current.classList.add(\"ConnectionDialog_hide_options\");\n    if (fromProject) {\n      for (let notification of notifications) {\n        if (notification.projectid === activeProject) {\n          let data = `yes-${user.avatar}`;\n          let msg = JSON.stringify({ id: collaboratorId, type: ACTION.REC_CONTINUE_PING, data: data })\n          socket.send(msg);\n\t  dispatch(updateEdit(true));\n          return;\n        }\n      }\n\n      let data = `continue=${user.username}=${user.name}=${user.avatar}=${activeProject}=${title}`;\n      let msg = JSON.stringify({ id: collaboratorId, type: ACTION.PING_USER, data: data })\n      socket.send(msg);\n    } else {\n      let data = `create=${user.username}=${user.name}=${user.avatar}`;\n      let msg = JSON.stringify({ id: collaboratorId, type: ACTION.PING_USER, data: data })\n      socket.send(msg);\n    }\n  }\n\n  const newProject = () => {\n    dispatch(createProject({ username: user.username, \n\t    collaborator: collaboratorId, title: \"New Project\" }));\n    closeDialog();\n    dispatch(loadProjects(user.username));\n  }\n\n  const cancelInvite = () => {\n    let msg = {};\n    let data = `cancel=${user.username}=${user.name}=${user.avatar}=${activeProject}=${title}`;\n    msg = JSON.stringify({ id: collaboratorId, type: ACTION.PING_USER, data: data })\n    socket.send(msg);\n    closeDialog();\n  }\n\n  return (\n    <Dialog open={isOpen}>\n      <DialogContent>\n        \n        <div className=\"ConnectionDialog_container\"> \n          <span className=\"ConnectionDialog_header\">\n            Connecting\n          </span>\n          <span className=\"ConnectionDialog_summary\">\n            {`Waiting for ${collaboratorName} to connect...`}\n          </span>\n          <ProgressSpinner />\n          <div className=\"ConnectionDialog_button_container\">\n            <button className=\"ConnectionDialog_button\" onClick={cancelInvite}>\n              CANCEL\n            </button>\n          </div>\n        </div>\n\n        {!isActive && ( \n          <div className=\"ConnectionDialog_options\">\n\n            <div className=\"Icon_container\">\n              <ErrorOutlineIcon style={{ fontSize: 40, color: \"gray\" }}/>\n            </div>\n            <span className=\"AlertDialog_message\">You cannot collaborate with anyone when you are appearing offline.</span>      \n\n            <div className=\"AlertDialog_button_container\">\n            <button className=\"AlertDialog_button\" onClick={closeDialog}>CLOSE</button>\n          </div>\n          </div>       \n        )}\n        \n        {isActive && (\n        <div className=\"ConnectionDialog_options\" ref={optionsRef}>\n          <span className=\"ConnectionDialog_header\">\n            Invite to collaborate?\n          </span>\n          <div className=\"Connection_Body\">\n          </div>\n          <span className=\"ConnectionDialog_alert\"> \n            {message}\n          </span>\n          <div className=\"Connection_confirm_button_container\">\n            <button className=\"Connection_confirm_button left\" onClick={displayConnectionStatus}>\n              YES\n            </button>\n            <button className=\"Connection_confirm_button right\" onClick={closeDialog}>\n              NO\n            </button>\n          </div>\n        </div>)}\n\t      \n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default ConnectionDialog\n","import React from 'react';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport './AlertDialog.css'\n\nconst AlertDialog = (props) => {\n  const { isOpen, closeDialog, message } = props;\n\n  return (\n    <Dialog open={isOpen}>\n      <DialogContent>\n        <div className=\"AlertDialog_container\">\n          <div className=\"AlertIcon_container\">\n            <ErrorOutlineIcon style={{ fontSize: 40, color: \"gray\" }}/>\n          </div>\n          <span className=\"AlertDialog_message\">{message}</span>\n\n          <div className=\"AlertDialog_button_container\">\n            <button className=\"AlertDialog_button\" onClick={closeDialog}>CLOSE</button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default AlertDialog\n","import React, { useState } from 'react';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport './ProfileDialog.css'\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\n\nconst ProfileDialog = (props) => {\n  const { isOpen, name, currentOnlineStatus, closeDialog, saveProfile, avatar } = props;\n  const [updatedName, setUpdatedName] = useState(name);\n  const [updatedPassword, setUpdatedPassword] = useState(\"\");\n  const [showOnlineStatus, setShowOnlineStatus] = useState(currentOnlineStatus);\n  const [selectedAvatar, setSelectedAvatar] = useState(avatar);\n\n  const updateName = elt => {\n    setUpdatedName(elt.target.value)\n  }\n\n  const updatePassword = elt => {\n    setUpdatedPassword(elt.target.value)\n  }\n\n  const changeAvatar = (avatar) => {\n    switch (avatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  } \n\n  return (\n    <Dialog open={isOpen}>\n      <DialogContent>\n        <div className=\"ProfileDialog_container\">\n\n          <span className=\"ProfileDialog_header\">\n            Profile information\n          </span>\n\n          <div className=\"Update_profile_pic\">\n            <div className=\"Profile_current\">\n              {selectedAvatar !== \"0\" ? \n                (<img src={changeAvatar(selectedAvatar)} className=\"current_icon\" alt=\"Current avatar\"/>) : \n                (<AccountCircleIcon style={{fontSize: 90}}/>)}\n            </div>\n\n            <div className=\"Profile_new\">    \n              <span>Select new avatar</span>\n              <div className=\"profile_icons\">              \n                <img src={Icon_1} className=\"new_icon\" alt=\"Icon Option 1\" onClick={() => setSelectedAvatar(\"1\")}/>     \n                <img src={Icon_2} className=\"new_icon\" alt=\"Icon Option 2\" onClick={() => setSelectedAvatar(\"2\")}/> \n                <img src={Icon_3} className=\"new_icon\" alt=\"Icon Option 3\" onClick={() => setSelectedAvatar(\"3\")}/> \n                <img src={Icon_4} className=\"new_icon\" alt=\"Icon Option 4\" onClick={() => setSelectedAvatar(\"4\")}/> \n                <img src={Icon_5} className=\"new_icon\" alt=\"Icon Option 5\" onClick={() => setSelectedAvatar(\"5\")}/> \n                <img src={Icon_6} className=\"new_icon\" alt=\"Icon Option 6\" onClick={() => setSelectedAvatar(\"6\")}/> \n                <img src={Icon_7} className=\"new_icon\" alt=\"Icon Option 7\" onClick={() => setSelectedAvatar(\"7\")}/> \n                <img src={Icon_8} className=\"new_icon\" alt=\"Icon Option 8\" onClick={() => setSelectedAvatar(\"8\")}/>          \n              </div>        \n            </div>\n          </div>\n\n          <div className=\"ProfileDialog_inputs\">\n            <label htmlFor=\"name_input\" className=\"input_container input_left\">\n              <span className=\"Profile_input_label\">\n                Name\n              </span>\n              <input \n                type=\"text\"\n                name=\"name_input\"\n                value={updatedName}\n                onChange={updateName}\n                className=\"Profile_input\"/>\n            </label>\n            \n            <label htmlFor=\"username_input\" className=\"input_container input_right\">\n              <span className=\"Profile_input_label\">\n                Password\n              </span>\n              <input \n                type=\"password\"\n                name=\"username_input\"\n                onChange={updatePassword}\n                className=\"Profile_input\"/>\n            </label>       \n          </div> \n\n          <div className=\"ProfileDialog_toggle_container\">\n            <label htmlFor=\"status_toggle\" className=\"Profile_toggle\">\n              <input\n                type=\"checkbox\"\n                id=\"status_toggle\"\n                name=\"status_toggle\"\n                checked={showOnlineStatus}\n                onChange={() => setShowOnlineStatus(prevState => !prevState)}\n                className=\"Profile_toggle_input\"/>\n              <div className=\"Profile_toggle_fill\"></div>   \n              <span className=\"Toggle_label\">\n                Display online status \n              </span>       \n            </label>\n\n            <span className=\"online_status_message\">\n              If you do not display your online status, you will not be able to see other users \n              who are online\n            </span>\n          </div>\n\n          <div className=\"ProfileDialog_button_container\">\n            <button className=\"ProfileDialog_button left\" onClick={closeDialog}>CLOSE</button>\n            <button \n              className=\"ProfileDialog_button right\" \n              onClick={() => saveProfile(updatedName, updatedPassword, showOnlineStatus, selectedAvatar)}>SAVE</button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default ProfileDialog\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveAs } from 'file-saver';\nimport './Projects.css';\nimport ConnectedUsers from './ConnectedUsers.js';\nimport Searchbar from './Searchbar.js';\nimport Header from './Header.js';\nimport About from './About.js';\nimport ProjectCard from './ProjectCard.js';\nimport ConnectionDialog from './ConnectionDialog.js';\nimport AlertDialog from './AlertDialog.js';\nimport ProfileDialog from './ProfileDialog.js';\nimport { changeName, chooseProject, clearReducer, updateActive, signOut, \n\tloadProjects, clearProject, changeAvatar, updateEdit,\n\tchangeVisibility, changePassword, selectCollab, updateLocation } from '../../actions';\nimport SocketSingleton from '../../middleware/socketMiddleware.js';\nimport { ACTION } from '../../actions/types.js';\n\nconst Projects = ({ history }) => {\n  // Get user from store\n  const user = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n  const { activeUsers, contacts, onlineProjects, canEdit,\n\t  offlineProjects } = useSelector((state) => state.projectReducer);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [openConnectionDialog, setOpenConnectionDialog] = useState(false);\n  const [currentConnection, setCurrentConnection] = useState({});\n  const [displayedProjects, setDisplayedProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState(onlineProjects.concat(offlineProjects));\n  const [alertWarning, setAlertWarning] = useState(\"\");\n  const [openAlertDialog, setOpenAlertDialog] = useState(false);\n  const [allUsers, setAllUsers] = useState([]);\n  const [openProfileDialog, setOpenProfileDialog] = useState(false);\n  const [connectionAlert, setConnectionAlert] = useState(\"\");\n  const [loadingProjects, setLoadingProjects] = useState(true);\n  const [fromProject, setFromProject] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [displayAbout, setDisplayAbout] = useState(false);\n\n  let socket = SocketSingleton.getInstance();\n  if (user.fromLogin) {\n    let msg = JSON.stringify({ id: user.username, type: ACTION.SIGN_IN,\n      data: \"\" });\n    socket.send(msg);\n  }\n\n  socket.onmessage = (response) => {\n    let msg = JSON.parse(response.data);\n    switch (msg.type) {\n      case ACTION.PING_USER:\n\tlet info_arr = msg.data.split(\"=\");\n\tlet ping_type = info_arr[0];\n\tlet collaboratorId = info_arr[1];\n\tlet collaboratorName = info_arr[2];\n\tlet collabAvatar = info_arr[3];\n        if (ping_type === \"cancel\") {\n          const updatedNotifications = notifications.filter((notification) => {\n            return notification.collaboratorId === collaboratorId;\n          })\n        setNotifications(updatedNotifications);\n       } else if (ping_type === \"create\") {\n\t let notiReceived =\n\t\t  { collaboratorName: collaboratorName,\n\t\t    collaborator: collaboratorId,\n                    projectid: \"\",\n\t            isNewProject: true,\n\t\t    projectTitle: \"New Project\",\n\t\t    type: ping_type,\n\t\t    proj: collaboratorId,\n\t\t    collaboratorAvatar: collabAvatar,\n\t\t  }\n         setNotifications([...notifications, notiReceived]);\n\t} else {\n\t  let projectid = info_arr[4];\n\t  let html = \"\";\n\t  let css = \"\";\n\t  let js = \"\";\n          for(var i = 0; i < onlineProjects.length; i++) {\n            if (onlineProjects[i].projectid === projectid) {\n              html = onlineProjects[i].html\n              css = onlineProjects[i].css\n              js = onlineProjects[i].js\n              break;\n            }\n\t  }\n\t  let avatar = \"0\";\n          for(var j = 0; j < contacts.length; i++) {\n\t\tif (contacts[j].username === collaboratorId) {\n\t\t\tavatar = contacts[j].avatar\n\t\t\tbreak;\n\t\t}\n\t  }\n\t  let title = info_arr[5];\n\t  let proj = { collaborator: collaboratorId, collaboratorName: collaboratorName,\n\t\t  title: title, projectid: projectid, html: html, css: css, js: js,\n\t          avatar: avatar }\n          setNotifications([...notifications,\n\t\t  { collaboratorName: collaboratorName,\n                    projectid: projectid,\n\t\t    collaborator: collaboratorId,\n\t            isNewProject: false,\n\t\t    projectTitle: proj.title,\n\t\t    type: ping_type,\n\t\t    proj: proj,\n\t\t    collaboratorAvatar: collabAvatar,\n\t\t  }]);\n\t}\n\tbreak;\n      case ACTION.COLLAB_ADD_PROJECT:\n\tloadProjects(user.username);\n\tbreak;\n      default:\n    }\n  }\n \n  window.onbeforeunload = () => {\n    socket.onclose = () => {\n    }\n  }\n\n  useEffect(() => {\n    if(!canEdit) {\n      return;\n    } else {\n      history.push('/editor');\n    }\n  }, [canEdit, history]);\n\t\n  // Update active status if online\n  useEffect(() => {\n    if (!user.isVisible) {\n      return;\n    } else {\n      const interval = setInterval(() => {\n        dispatch(updateActive({ username: user.username, isVisible: user.isVisible, \n          isProjectsPage: true }));\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, [user.username, user.isVisible, dispatch]);\n\n  // this displays the connection dialog for the user to confirm they want to send the invite\n  const continueProject = (projectid, title, collaborator, collaboratorName, \n\t  html, css, js) => {\n    let avatar = \"0\";\n    let isActive = true;\n    for(var i = 0; i < contacts.length; i++) {\n      if (contacts[i].username === collaborator) {\n        avatar = contacts[i].avatar\n        isActive = contacts[i].isActive\n        break;\n      }\n    }\n    if (isActive) {\n      setFromProject(true);\n      setOpenConnectionDialog(true);\n      setCurrentConnection({\n        name: collaboratorName, \n        username: collaborator,\n        avatar: avatar,\n        isActive: isActive,\n      });\n      dispatch(selectCollab({ name: collaboratorName, username: collaborator,\n\t      avatar: avatar }));\n      dispatch(chooseProject({ projectid: projectid, \n\t      collaborator: collaborator, collaboratorName: collaboratorName, \n\t      html: html, css: css, js: js, title: title, collaboratorAvatar: avatar }));\n      setConnectionAlert(\n        `This will send an invitation to ${collaboratorName} to continue working on ${title}`\n        );\n    } else {\n      setOpenAlertDialog(true);\n      setAlertWarning(\n        `${collaboratorName} is currently offline. You can only edit \n\t      this project when you are both online.`\n      );\n    }\n  }\n\n  // this displays the connection dialog for the user to confirm they want to send the invite\n  const onActiveUserClick = (name, username, avatar) => {\n    setFromProject(false);\n    setOpenConnectionDialog(true);\n    setCurrentConnection({\n      name: name, \n      username: username,\n      avatar: avatar,\n      isActive: true\n    });\n    dispatch(selectCollab({ name: name, username: username, avatar: avatar }));\n    setConnectionAlert(\n      `This will CREATE a new project with ${name}.`\n    );\n  }\n\n  // this is called when the user tries to connect with a recent user\n  const onRecentUserClick = (collaborator, collaboratorName, isActive, avatar) => {\n    if (isActive) {\n      onActiveUserClick(collaboratorName, collaborator, avatar);\n      return;\n    }\n    setOpenAlertDialog(true);\n    setAlertWarning(\n      `${collaboratorName} is currently offline. You can only CREATE new projects with ACTIVE users.`\n    );\n  }\n\n  \n  // when the user want to log out\n  const handleLogout = () => {\n    let msg = JSON.stringify({ id: \"\", type: ACTION.SIGN_OUT, data: \"\" })\n    socket.send(msg);\n    history.push('/');\n    dispatch(signOut());\n    dispatch(clearReducer());\n    dispatch(updateLocation(true));\n  }\n\n  // called when user clicks on Profile\n  const displayProfile = () => {\n    setOpenProfileDialog(true);\n  }\n\n  const downloadProject = (title, html, css, js) => {  \n    let folderName = getFolderName(title);\n    const zip = require('jszip')();\n    let folder = zip.folder(folderName);\n\n    // add the files to the folder\n    folder.file(\"index.js\", js);\n    folder.file(\"style.css\", css);\n    folder.file(\"index.html\", html);\n\n    zip.generateAsync({type:\"blob\"})\n    .then(function(content) {\n        // see FileSaver.js\n        saveAs(content, `${folderName}.zip`);\n    });\n  }\n\n  // format the folder name to get rid of white spaces and add underscores\n  const getFolderName = (title) => {\n    let split = title.split(/[\\s,]+/);\n    split = split.filter(item => {\n      return item !== \"\";\n    }).map(word => word.toLowerCase()).join(\"_\")\n    return split;\n  }\n\n  // when the user clicks save after editing Profile\n  const saveProfile = (name, password, isVisible, avatar) => {\n    if (user.name !== name) {\n      dispatch(changeName({ username: user.username, name: name }));\n    }\n    \n    if (user.isVisible !== isVisible) {\n      dispatch(changeVisibility({ username: user.username, visibility: isVisible }));\n    }\n    \n    if (password.length >= 8 && password.length <= 60) {\n      dispatch(changePassword({ username: user.username, password: password }));\n    }\n\n    dispatch(changeAvatar({ username: user.username, avatar: avatar }));\n    setOpenProfileDialog(false);\n  }\n\n  const closeConnectionDialog = (fromProject) => {\n    setOpenConnectionDialog(false);\n    if (fromProject) {\n      dispatch(clearProject());\n    }\n    setConnectionAlert(\"\");\n    setCurrentConnection({});\n  }\n\n  const closeAlertDialog = () => {\n    setAlertWarning(\"\");\n    setOpenAlertDialog(false);\n  }\n\n  const getProjectComponents = () => {\n    let projects = displayedProjects.map((project) => (\n      <ProjectCard\n        key={project.projectid}\n        title={project.title}\n        image={project.image}\n        collaboratorName={project.collaboratorName}\n        downloadProject={() => downloadProject(project.projectid, project.html, project.css, project.js)}\n        continueProject={() => continueProject(\n          project.projectid, project.title, project.collaborator, \n\t  project.collaboratorName, project.html, project.css, project.js\n        )}/>\n    ));\n    return projects;\n  }\n\n\n  // \n  const acceptCollaboration = (notification, callBack) => {\n    const updated = notifications.filter(notif => {\n      return notif !== notification\n    })\n    setNotifications(updated);\n    callBack();\n  }\n\n  // accept when a user sends collaboration request\n  const acceptCallBack = (not_type, info) => {\n    if (not_type === \"create\") {\n      let msg = JSON.stringify({ id: info, type: ACTION.REC_CREATE_PING, data: \"yes\" })\n      socket.send(msg);\n      dispatch(loadProjects(user.username))\n    } else if (not_type === \"continue\") {\n      let data = `yes-${user.avatar}`;\n      let msg = JSON.stringify({ id: info.collaborator, type: ACTION.REC_CONTINUE_PING, \n\t      data: data })\n      socket.send(msg);\n      dispatch(chooseProject({ projectid: info.projectid, \n\t  collaborator: info.collaborator, collaboratorName: info.collaboratorName, \n\t  html: info.html, css: info.css, js: info.js, title: info.title, collaboratorAvatar: info.avatar }));\n      dispatch(updateEdit(true));\n    }\n  }\n\n\n  // decline when a user sends collaboration request\n  const declineCallBack = (collabId, ping_type) => {\n    if (ping_type === \"create\") {\n      let msg = JSON.stringify({ id: collabId, type: ACTION.REC_CREATE_PING, data: \"no\" })\n      socket.send(msg);\n    } else {\n      let msg = JSON.stringify({ id: collabId, type: ACTION.REC_CONTINUE_PING, data: \"no\" })\n      socket.send(msg);\n    }\n\n  }\n\n  const declineCollaboration = (notification, callBack) => {\n    const updated = notifications.filter(notif => {\n      return notif !== notification\n    })\n    setNotifications(updated);\n    callBack();\n  }\n\n  useEffect(() => {\n    // disable flickering behavious on window resize\n    let resizeTimer;\n    window.addEventListener(\"resize\", () => {\n      document.body.classList.add(\"resize-animation-stopper\");\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        document.body.classList.remove(\"resize-animation-stopper\");\n      }, 400);\n    });\n  }, []);\n\n\n  useEffect(() => {\n    // set state for active and recent users with dummy users\n    setAllUsers([]);\n    setAllProjects([]);\n    let allUsersReloaded = contacts.concat(activeUsers);\n    let allProjectsReloaded = onlineProjects.concat(offlineProjects);\n    if (user.fromLogin && allProjectsReloaded.length > 0) {\n      let allPaneIDS = []\n      allProjectsReloaded.forEach((project) => {\n        // Setup socket for each editor pane with specified project \n        let projectid = project.projectid;\n        allPaneIDS.push(projectid);\n      });\n      allPaneIDS.forEach(paneID => {\n        let msg = JSON.stringify({ id: paneID, \n\t  type: ACTION.LOAD_INIT_PROJECTS, data: \"\" })\n        socket.send(msg);\n      });\n      dispatch(updateLocation(false));\n    }\n    setAllUsers(allUsersReloaded);\n    setAllProjects(allProjectsReloaded);\n  }, [contacts, dispatch, onlineProjects, offlineProjects, activeUsers, socket, user.fromLogin]);\n\n\n  useEffect(() => {\n    let projects = allProjects.filter((project) => {\n      return project.title.includes(searchQuery) || project.title.includes(searchQuery.toUpperCase());\n    });\n\n    // setDisplayedProjects([]);\n    setDisplayedProjects(projects);\n    \n    return () => {\n      if (loadingProjects) {\n        setLoadingProjects(false);\n      }\n    }\n  }, [searchQuery, allProjects, loadingProjects]);\n\n  return (\n    <div className=\"Projects_container\">\n      <Header \n        name={user.name}\n        email={user.email}\n        handleLogout={handleLogout}\n        displayProfile={displayProfile}\n        notifications={notifications}\n        avatar={user.avatar}\n        accept={acceptCollaboration}\n        acceptCallBack={acceptCallBack}\n        declineCallBack={declineCallBack}\n        decline={declineCollaboration}\n\tisActive={user.isVisible}\n\tdisplayAbout={() => setDisplayAbout(true)}\n        history={history}/>\n\n      \n      <div className=\"Projects_main\">\n        <div className=\"Projects_content\">\n          <Searchbar\n            query={searchQuery}\n            onChange={setSearchQuery}/>\n\n          <span className=\"Projects_label\">\n            Recent Projects\n          </span>\n\n          {!loadingProjects && allProjects.length === 0 && ( \n            <div className=\"card Projects_no_result\">\n              <span className=\"no_result_summary\">\n                No projects\n              </span>\n              <span className=\"no_result_message\">\n                You have not collaborated on any projects with anyone. Please select any active user\n                to start collaborating on your first project.\n              </span>\n            </div>\n          )}\n\n          {!loadingProjects && allProjects.length !== 0 && displayedProjects.length === 0 && (\n            <div className=\"card Projects_no_result\">\n              <span className=\"no_result_summary\">\n                No results found\n              </span>\n              <span className=\"no_result_message\">\n                You do not have any project that matches the given name. \n              </span>\n            </div>\n          )}\n\n          {!loadingProjects && displayedProjects.length > 0 && ( \n            <div className=\"Projects_recent\">\n              {getProjectComponents()}\n            </div>\n          )}    \n        </div>\n\n        <div className=\"Projects_sidebar\">\n          <ConnectedUsers \n            activeUsers={activeUsers}\n            contacts={contacts}\n            onActiveUserClick={onActiveUserClick}\n            onRecentUserClick={onRecentUserClick}\n            isVisible={user.isVisible}/>\n        </div>   \n      </div>\n      \n      {openConnectionDialog && (\n        <ConnectionDialog\n          collaboratorName={currentConnection.name}\n          collaboratorId={currentConnection.username}\n          isActive={user.isVisible}\n          isOpen={openConnectionDialog}\n          fromProject={fromProject}\n          closeDialog={() => closeConnectionDialog(fromProject)}\n          message={connectionAlert}\n          socket={socket}\n          history={history}\n          notifications={notifications}/>\n      )}\n        \n      {openAlertDialog && (\n        <AlertDialog \n          isOpen={openAlertDialog}\n          closeDialog={closeAlertDialog}\n          message={alertWarning}/>\n      )} \n\n      {openProfileDialog && (\n        <ProfileDialog \n          isOpen={openProfileDialog}\n          name={user.name} \n          currentOnlineStatus={user.isVisible}\n          closeDialog={() => setOpenProfileDialog(false)}\n          saveProfile={saveProfile}\n          avatar={user.avatar}/>\n      )}   \n\n      {displayAbout && (\n        <About \n          isOpen={displayAbout}\n          closeDialog={() => setDisplayAbout(false)}\n        />\n      )}    \n    </div>\n  );\n}\nexport default Projects;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createHashHistory } from \"history\";\nimport Auth from './components/Auth/Auth';\nimport Editor from './components/Editor/Editor'\nimport Projects from './components/Projects/Projects'\n\nconst history = createHashHistory();\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#6E4AB1'\n    },\n    secondary: {\n      main: '#000000'\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter history={history}>\n        <Route path=\"/\" exact component={Auth} />\n        <Route path=\"/editor\" exact component={Editor} />\n        <Route path=\"/projects\" exact component={Projects} />\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ACTION } from '../actions/types';\n \nconst initialState = {\n  activeProject: '',\n  html: '',\n  css: '',\n  js: '',\n  title: '',\n  collaboratorId: '',\n  collaboratorName: '',\n  collaboratorAvatar: '0',\n  onlineProjects: [],\n  offlineProjects: [],\n  activeUsers: [], \n  contacts: [],\n  canEdit: false,\n}\n\nexport const projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION.CHOOSE_PROJECT:\n      return { ...state, activeProject: action.payload.projectid, \n\t      html: action.payload.html, css: action.payload.css,\n      js: action.payload.js, collaboratorName: action.payload.collaboratorName,\n      title: action.payload.title, collaboratorId: action.payload.collaborator, \n      collaboratorAvatar: action.payload.collaboratorAvatar };\n    case ACTION.CLEAR_PROJECT:\n      return { ...state, html: \"\", css: \"\", js: \"\", collaboratorName: \"\",\n      title: \"\", activeProject: \"\", collaboratorId: \"\", collaboratorAvatar: \"0\" };\n    case ACTION.CHOOSE_USER:\n      return { ...state, collaboratorId: action.payload };\n    case ACTION.UPDATE_EDIT:\n      return { ...state, canEdit: action.payload };\n    case ACTION.SELECT_COLLAB:\n      return { ...state, collaboratorId: action.payload.username, \n      collaboratorName: action.payload.name, collaboratorAvatar: action.payload.avatar };\n    case ACTION.LOAD_INIT_PROJECTS: \n      return { ...state, onlineProjects: action.payload.onlineProjects,\n      offlineProjects: action.payload.offlineProjects };\n    case ACTION.UPDATE_PROJECTS:\n      return { ...state, onlineProjects: action.payload.onlineProjects,\n      offlineProjects: action.payload.offlineProjects };\n    case ACTION.UPDATE_USERS:\n      return { ...state, contacts: action.payload.contacts,\n\t      activeUsers: action.payload.activeUsers };\n    case ACTION.CLEAR_REDUCER:\n      return { ...state, activeProject: '', onlineProjects: [], title: '',\n      offlineProjects: [], activeUsers: [], contacts: [], html: '',\n      css: '', js: '', collaboratorId: '', \n\t      collaboratorName: '', collaboratorAvatar: \"0\" };\n    default:\n      return state;\n  }\n};\n\n\n","import { ACTION } from '../actions/types';\n\nconst initialState = {\n  isSignedIn: false,\n  username: '',\n  email: '',\n  name: '',\n  isVisible: true,\n  avatar: \"0\",\n  fromLogin: true\n}\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n\t  case ACTION.SIGN_IN:\n      return { ...state, isSignedIn: true, username: action.payload.username, \n\t      email: action.payload.email, name: action.payload.name, \n\t      avatar: action.payload.avatar, isVisible: action.payload.isVisible };\n    case ACTION.SIGN_OUT:\n      return { ...state, isSignedIn: false, username: '', email: '', \n\t      activeProject: '',  avatar: \"0\" };\n    case ACTION.CHANGE_VISIBILITY:\n      return { ...state, isVisible: action.payload };\n    case ACTION.UPDATE_LOCATION:\n      return { ...state, fromLogin: action.payload };\n    case ACTION.CHANGE_NAME:\n      return { ...state, name: action.payload };\n      case ACTION.CHANGE_AVATAR:\n        return { ...state, avatar: action.payload };\n    default:\n      return state;\n  }\n}\n","import { projectReducer } from './projectReducer';\nimport { userReducer } from './userReducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n  projectReducer,\n  userReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './main/webapp/App.js';\nimport rootReducer from './main/webapp/reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}