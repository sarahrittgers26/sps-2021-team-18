{"version":3,"sources":["main/webapp/components/Api/Api.js","main/webapp/middleware/socketMiddleware.js","main/webapp/actions/types.js","main/webapp/actions/index.js","main/webapp/components/Auth/Auth.js","main/webapp/components/Editor/Pane.js","main/webapp/images/avatar-1.png","main/webapp/images/avatar-2.png","main/webapp/images/avatar-3.png","main/webapp/images/avatar-4.png","main/webapp/images/avatar-5.png","main/webapp/images/avatar-6.png","main/webapp/images/avatar-7.png","main/webapp/images/avatar-8.png","main/webapp/components/Editor/Profile.js","main/webapp/components/Editor/Navbar.js","main/webapp/components/Editor/StaticProgressBar.js","main/webapp/components/Editor/StopCollab.js","main/webapp/components/Editor/Editor.js","main/webapp/components/Projects/User.js","main/webapp/components/Projects/ConnectedUsers.js","main/webapp/components/Projects/Searchbar.js","main/webapp/components/Projects/Notification.js","main/webapp/images/banner.png","main/webapp/components/Projects/Header.js","main/webapp/components/Projects/AspectRatio.js","main/webapp/components/Projects/ProjectCard.js","main/webapp/components/Projects/ProgressSpinner.js","main/webapp/components/Projects/ConnectionDialog.js","main/webapp/components/Projects/AlertDialog.js","main/webapp/components/Projects/ProfileDialog.js","main/webapp/components/Projects/Projects.js","main/webapp/App.js","main/webapp/reducers/projectReducer.js","main/webapp/reducers/userReducer.js","main/webapp/reducers/index.js","index.js"],"names":["axios","create","baseURL","AppConfig","SocketSingleton","instance","getInstance","WebSocket","ACTION","SIGN_IN","SIGN_OUT","CAN_EDIT","CHANGE_PASSWORD","CHANGE_VISIBILITY","CHANGE_AVATAR","CHANGE_NAME","CHOOSE_PROJECT","CHOOSE_USER","UPDATE_PROJECTS","UPDATE_USERS","CLEAR_REDUCER","CLEAR_PROJECT","LOAD_INIT_PROJECTS","CREATE_PROJECT","SEND_HTML","SEND_CSS","SEND_JS","SEND_TITLE","REC_HTML","REC_CSS","REC_JS","REC_TITLE","PING_USER","REC_CREATE_PING","REC_CONTINUE_PING","SEND_LEFT","REC_LEFT","SELECT_COLLAB","projectSelector","selector","projects","selection","i","length","current","bothActive","project","collaborator","collaboratorName","projectid","title","html","css","js","collaboratorAvatar","image","push","userSelector","wantContact","users","isContact","user","username","name","isActive","avatar","signIn","type","payload","chooseProject","selectCollab","collab","clearProject","changeVis","vis","loadUsers","dispatch","a","url","get","response","contacts","data","activeUsers","loadProjects","onlineProjects","offlineProjects","loadInitialProjects","Auth","history","useDispatch","useState","setUsername","usernameError","setUsernameError","usernameErrorMsg","setUsernameErrorMsg","password","setPassword","passwordError","setPasswordError","passwordErrorMsg","setPasswordErrorMsg","email","setEmail","emailError","setEmailError","emailErrorMsg","setEmailErrorMsg","setName","nameError","setNameError","nameErrorMsg","setNameErrorMsg","displaySignIn","setDisplaySignIn","displaySignUp","setDisplaySignUp","signInRef","useRef","signUpRef","openSignIn","classList","add","remove","openSignUp","handleKeyPress","e","callBack","key","handleOnSignUpSubmit","error","RegExp","test","String","toLowerCase","validateEmail","handleOnSignInSubmit","handleSignUp","encodeURIComponent","post","status","errors","usernameExists","emailExists","message","handleSignIn","errorAndInfo","isVisible","className","onClick","ref","required","onChange","target","value","autoComplete","onKeyPress","id","label","Pane","props","language","displayName","socket","onBeforeChange","editor","msg","JSON","stringify","send","options","lineWrapping","lint","mode","lineNumbers","theme","Profile","side","active","isUser","handleSave","handleReturn","displayMenu","setDisplayMenu","menuRef","iconRef","handleClick","callback","prevState","useEffect","style","display","handleClickOutside","event","contains","document","addEventListener","removeEventListener","src","Icon_1","Icon_2","Icon_3","Icon_4","Icon_5","Icon_6","Icon_7","Icon_8","addAvatar","alt","fontSize","Navbar","projectName","useSelector","state","userReducer","placeholder","elt","StaticProgressBar","StopCollab","open","Dialog","DialogContent","Editor","projectReducer","activeProject","collaboratorId","projecthtml","setProjectHtml","projectcss","setProjectCss","projectjs","setProjectJs","srcDoc","setSrcDoc","setProjectName","displayExit","setDisplayExit","window","onpopstate","console","log","onmessage","parse","save","timer","setTimeout","clearTimeout","html2canvas","querySelector","then","canvas","toBlob","blob","proj","formData","FormData","append","newHtml","newCss","newJs","newTitle","htmlUrl","cssUrl","jsUrl","titleUrl","imageUrl","headers","timeout","sandbox","width","height","User","nameRef","offsetWidth","scrollWidth","ConnectedUsers","onActiveUserClick","onRecentUserClick","actives","map","recentContacts","Searchbar","query","searchBarRef","focus","setFocus","onFocus","onBlur","Notification","accept","decline","isNewProject","projectTitle","Header","handleLogout","displayProfile","notifications","acceptCallBack","declineCallBack","displayNotifications","setDisplayNotifications","notificationsRef","userIconRef","notificationIconRef","Banner","notification","indexOf","AspectRatio","child","ProjectCard","downloadProject","continueProject","ProgressSpinner","ConnectionDialog","isOpen","closeDialog","fromProject","optionsRef","split","answer","newProject","details","partner","messageDto","collabMesg","COLLAB_ADD_PROJECT","color","AlertDialog","ProfileDialog","currentOnlineStatus","saveProfile","updatedName","setUpdatedName","updatedPassword","setUpdatedPassword","showOnlineStatus","setShowOnlineStatus","selectedAvatar","setSelectedAvatar","changeAvatar","htmlFor","checked","Projects","searchQuery","setSearchQuery","openConnectionDialog","setOpenConnectionDialog","currentConnection","setCurrentConnection","displayedProjects","setDisplayedProjects","concat","allProjects","setAllProjects","alertWarning","setAlertWarning","openAlertDialog","setOpenAlertDialog","allUsers","setAllUsers","openProfileDialog","setOpenProfileDialog","connectionAlert","setConnectionAlert","loadingProjects","setLoadingProjects","setFromProject","setNotifications","onopen","mes","allPaneIDS","forEach","paneID","info_arr","ping_type","collabAvatar","updatedNotifications","filter","onbeforeunload","onclose","interval","setInterval","pageInfo","isProjectsPage","clearInterval","getFolderName","item","word","join","isOnline","resizeTimer","body","allUsersReloaded","allProjectsReloaded","includes","toUpperCase","updated","notif","not_type","info","collabId","folderName","zip","require","folder","file","generateAsync","content","saveAs","closeConnectionDialog","change","visInfo","visibility","changePassword","createHashHistory","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","App","ThemeProvider","path","exact","component","initialState","isSignedIn","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bf5c2056.chunk.js","sourcesContent":["import axios from 'axios';\n// baseUrl only needs to be set to production link when calling appengine:deploy\n// export const baseUrl = 'http://localhost:8080';\nexport const baseUrl = 'https://spring21-sps-18.appspot.com';\nexport default axios.create({\n\tbaseURL: baseUrl\n})\n","const AppConfig = {\n  PROTOCOL: \"ws://\",\n  // HOST: 'localhost',\n  HOST: \"https://spring21-sps-18.appspot.com\",\n  PORT: \":9000/\"\n}\n\nconst SocketSingleton = (() => {\n  let instance;\n\n  const createInstance = () => {\n    return new WebSocket(AppConfig.PROTOCOL + AppConfig.HOST + AppConfig.PORT);\n  }\n  \n  return {\n    getInstance: () => {\n      if (!instance) {\n\tinstance = createInstance();\n      }\n      return instance;\n    }\n  };\n})();\n\nexport default SocketSingleton;\n","export const ACTION = {\n  SIGN_IN: \"SIGN_IN\",\n  SIGN_OUT: \"SIGN_OUT\",\n  CAN_EDIT: \"CAN_EDIT\",\n  CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\n  CHANGE_VISIBILITY: \"CHANGE_VISIBILITY\",\n  CHANGE_AVATAR: \"CHANGE_AVATAR\",\n  CHANGE_NAME: \"CHANGE_NAME\",\n  CHOOSE_PROJECT: \"CHANGE_PROJECT\",\n  CHOOSE_USER: \"CHOOSE_USER\",\n  UPDATE_PROJECTS: \"UPDATE_PROJECTS\",\n  UPDATE_USERS: \"UPDATE_USERS\",\n  CLEAR_REDUCER: \"CLEAR_REDUCER\",\n  CLEAR_PROJECT: \"CLEAR_PROJECT\",\n  LOAD_INIT_PROJECTS: \"LOAD_INIT_PROJECTS\",\n  CREATE_PROJECT: \"CREATE_PROJECT\",\n  SEND_HTML: \"SEND_HTML\",\n  SEND_CSS: \"SEND_CSS\",\n  SEND_JS: \"SEND_JS\",\n  SEND_TITLE: \"SEND_TITLE\",\n  REC_HTML: \"REC_HTML\",\n  REC_CSS: \"REC_CSS\",\n  REC_JS: \"REC_JS\",\n  REC_TITLE: \"REC_TITLE\",\n  PING_USER: \"PING_USER\",\n  REC_CREATE_PING: \"REC_CREATE_PING\",\n  REC_CONTINUE_PING: \"REC_CONTINUE_PING\",\n  SEND_LEFT: \"SEND_LEFT\",\n  REC_LEFT: \"REC_LEFT\",\n  SELECT_COLLAB: \"SELECT_COLLAB\",\n}\n","import axios from '../components/Api/Api';\nimport SocketSingleton from '../middleware/socketMiddleware';\nimport { ACTION } from './types';\n\n// Return either online or offline projects\nconst projectSelector = (selector, projects) => {\n    const selection = [];\n    for (var i = 0; i < projects.length; i++) {\n        let current = projects[i]\n            // selector is true/false for online/offline projects\n            // if selector is true then only add online projects otherwise add offline\n        if (current.bothActive === selector) {\n            let project = {\n                collaborator: current.collaborator,\n                collaboratorName: current.collaboratorName,\n                projectid: current.projectid,\n                title: current.title,\n                html: current.html,\n                css: current.css,\n                js: current.js,\n                collaboratorAvatar: current.collaboratorAvatar,\n                image: current.image,\n            };\n            selection.push(project);\n        }\n    }\n    return selection;\n};\n\n// Return either active or inactive users\nconst userSelector = (wantContact, users) => {\n    const selection = [];\n    for (var i = 0; i < users.length; i++) {\n\n        let current = users[i]\n            // selector is true/false for online/offline projects\n            // if selector is true then only add online projects otherwise add offline\n        if (current.isContact === wantContact) {\n            let user = {\n                username: current.username,\n                name: current.name,\n                isActive: current.isActive,\n                avatar: current.avatar,\n            };\n            selection.push(user);\n        }\n    }\n    return selection;\n};\n\n// On sign in\nexport const signIn = (user) => {\n    return {\n        type: ACTION.SIGN_IN,\n        payload: user\n    }\n};\n\n// On sign out\nexport const signOut = () => ({\n    type: ACTION.SIGN_OUT,\n    payload: null\n});\n\n// Clears state on sign out\nexport const clearReducer = () => ({\n    type: ACTION.CLEAR_REDUCER,\n    payload: null\n});\n\n\n// On project selection\nexport const chooseProject = (project) => {\n    return {\n        type: ACTION.CHOOSE_PROJECT,\n        payload: project\n    }\n};\n\nexport const selectCollab = (collab) => {\n    return {\n        type: ACTION.SELECT_COLLAB,\n        payload: collab\n    }\n};\n\n\n// Function to handle saving project to database\nexport const handleSave = (proj) => async(dispatch) => {\n    const newHtml = encodeURIComponent(proj.html);\n    const newCss = encodeURIComponent(proj.css);\n    const newJs = encodeURIComponent(proj.js);\n    const newTitle = encodeURIComponent(proj.title);\n    const projectid = proj.projectid;\n    const image = proj.image;\n    let htmlUrl = `/save-html?projectid=${projectid}&html=${newHtml}`;\n    let cssUrl = `/save-css?projectid=${projectid}&css=${newCss}`;\n    let jsUrl = `/save-js?projectid=${projectid}&js=${newJs}`;\n    let titleUrl = `/update-title?projectid=${projectid}&title=${newTitle}`;\n    let imageUrl = `/save-image?projectid=${projectid}`;\n    await axios.get(htmlUrl);\n    await axios.get(cssUrl);\n    await axios.get(jsUrl);\n    await axios.get(titleUrl);\n    await axios.post(imageUrl, image, {\n      headers: {\n        'accept': 'application/json',\n        'Accept-Language': 'en-US,en;q=0.8',\n        'Content-Type': `multipart/form-data`,\n      }\n    })\n  }\n  \n\n// On project deselection\nexport const clearProject = () => {\n    return {\n        type: ACTION.CLEAR_PROJECT,\n        payload: null\n    }\n};\n\n\n// On user selection\nexport const chooseUser = (username) => {\n    return {\n        type: ACTION.CHOOSE_USER,\n        payload: username\n    }\n};\n\n// Update online status\nexport const updateActive = (pageInfo) => async(dispatch) => {\n    const username = pageInfo.username;\n    const isVisible = pageInfo.isVisible;\n    const isProjectsPage = pageInfo.isProjectsPage;\n    if (isVisible) {\n        let url = `/update-active?username=${username}`;\n        await axios.get(url);\n    }\n\n    if (isProjectsPage) {\n        dispatch(loadProjects(username));\n        dispatch(loadUsers(username));\n    }\n};\n\n// On name change\nexport const changeName = (change) => async(dispatch) => {\n    const username = change.username;\n    const name = change.name;\n    let url = `/change-name?username=${username}&name=${name}`;\n    await axios.get(url);\n    dispatch({\n        type: ACTION.CHANGE_NAME,\n        payload: name\n    })\n};\n\n// On avatar change\nexport const changeAvatar = (change) => async(dispatch) => {\n    const username = change.username;\n    const avatar = change.avatar;\n    let url = `/change-avatar?username=${username}&avatar=${avatar}`;\n    await axios.get(url);\n    dispatch({\n        type: ACTION.CHANGE_AVATAR,\n        payload: avatar\n    })\n};\n\n// On password change\nexport const changePassword = (change) => async(dispatch) => {\n    const username = change.username;\n    const password = change.password;\n    let url = `/change-pass?username=${username}&password=${password}`;\n    await axios.get(url);\n    dispatch({\n        type: ACTION.CHANGE_PASSWORD,\n        payload: password\n    })\n};\n\nexport const changeVis = (vis) => {\n    return {\n        type: ACTION.CHANGE_VISIBILITY,\n        payload: vis\n    }\n};\n\n// On visibility change\nexport const changeVisibility = (visInfo) => async(dispatch) => {\n    const username = visInfo.username;\n    const vis = visInfo.visibility;\n    let url = `/change-vis?username=${username}&visibility=${vis}`;\n    await axios.get(url);\n    dispatch(changeVis(vis));\n};\n\n\nexport const updateTitle = (title) => {\n    return {\n        type: ACTION.UPDATE_TITLE,\n        payload: title\n    }\n};\n\n// Create project with user\nexport const createProject = (details) => async(dispatch) => {\n    const username = details.username;\n    const partner = details.collaborator;\n    const title = details.title;\n    let url = `/create?username=${username}&partner=${partner}&title=${title}`;\n    const response = await axios.post(url);\n    let projectid = response.data;\n    const socket = SocketSingleton.getInstance();\n    let messageDto = JSON.stringify({\n        id: projectid,\n        type: ACTION.LOAD_INIT_PROJECTS,\n        data: \"\"\n    })\n    socket.send(messageDto);\n    let collabMesg = JSON.stringify({\n        id: partner,\n        type: ACTION.COLLAB_ADD_PROJECT,\n        data: projectid\n    })\n    socket.send(collabMesg);\n    dispatch(loadProjects(username));\n};\n\n// Load users that are active and inactive \nexport const loadUsers = (username) => async(dispatch) => {\n    if (username !== '') {\n        // Load users from backend\n        let url = `/get-users?username=${username}`;\n        const response = await axios.get(url);\n        dispatch({\n            type: ACTION.UPDATE_USERS,\n            payload: {\n                contacts: userSelector(true, response.data),\n                activeUsers: userSelector(false, response.data)\n            }\n        });\n    }\n};\n\n// Load projects that are online or offline\nexport const loadProjects = (username) => async(dispatch) => {\n    if (username !== '') {\n        // Load projects from backend\n        let url = `/load?username=${username}`;\n        const response = await axios.get(url);\n        dispatch({\n            type: ACTION.UPDATE_PROJECTS,\n            payload: {\n                onlineProjects: projectSelector(true, response.data),\n                offlineProjects: projectSelector(false, response.data)\n            }\n        });\n    }\n};\n\n// Load projects that are online or offline\nexport const loadInitialProjects = (username) => async(dispatch) => {\n    if (username !== '') {\n        // Load projects from backend\n        let url = `/load?username=${username}`;\n        const response = await axios.get(url);\n        dispatch({\n            type: ACTION.LOAD_INIT_PROJECTS,\n            payload: {\n                onlineProjects: projectSelector(true, response.data),\n                offlineProjects: projectSelector(false, response.data)\n            }\n        });\n    }\n};","import React, { useState, useRef } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport axios from '../Api/Api';\nimport { loadInitialProjects, loadUsers, signIn } from '../../actions';\nimport './Auth.css';\n\nconst Auth = ({ history }) => {\n  // Dispatch for react-redux store\n  const dispatch = useDispatch();\n\n  // Store user's information in React state\n  const [username, setUsername] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(false);\n  const [usernameErrorMsg, setUsernameErrorMsg] = useState('');\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState('');\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [emailErrorMsg, setEmailErrorMsg] = useState('');\n  const [name, setName] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [nameErrorMsg, setNameErrorMsg] = useState('');\n\n  // to switch between sign in and sign up\n  const [displaySignIn, setDisplaySignIn] = useState(true);\n  const [displaySignUp, setDisplaySignUp] = useState(false);\n  const signInRef = useRef();\n  const signUpRef = useRef();\n\n  const openSignIn = () => {\n    if (!displaySignIn) {\n      setDisplaySignIn(true);\n      setDisplaySignUp(false);\n      setEmailError(false);\n      setNameError(false);\n      setPasswordError(false);\n      setUsernameError(false);\n      signInRef.current.classList.add(\"visible_sign_in\");\n      signInRef.current.classList.remove(\"hidden_sign_in\")\n      signUpRef.current.classList.remove(\"visible_sign_up\");\n      signUpRef.current.classList.add(\"hidden_sign_up\");\n    }\n  }\n\n  const openSignUp = () => {\n    if (!displaySignUp) {\n      setDisplaySignIn(false);\n      setDisplaySignUp(true);\n      setEmailError(false);\n      setNameError(false);\n      setPasswordError(false);\n      setUsernameError(false);\n      signInRef.current.classList.remove(\"visible_sign_in\");\n      signInRef.current.classList.add(\"hidden_sign_in\")\n      signUpRef.current.classList.add(\"visible_sign_up\");\n      signUpRef.current.classList.remove(\"hidden_sign_up\");\n    }\n  }\n\n\n  // Handles and checks keypress and calls the callback method\n  const handleKeyPress = (e, callBack) => {\n    if (e.key === 'Enter') {\n      callBack();\n    };\n  };\n\n  // Checks that email is in a valid email address form\n  // Code Reference: \n  // https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n  const validateEmail = (email) => {\n    // Breaks regex expression into strings to remain under 80 characters\n    var re = new RegExp(['^(([^<>()[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()[\\\\]\\\\\\\\.,;:\\\\s',\n      '@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]',\n      '{1,3}\\\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$']);\n    return re.test(String(email).toLowerCase());\n  }\n\n  // Validates user entered sign up information correctly\n  const handleOnSignUpSubmit = (username, password, email, name, callBack) => {\n    let error = false;\n    if (username === '') {\n      setUsernameError(true);\n      setUsernameErrorMsg('Username cannot be empty');\n      error = true;\n    } else {\n      setUsernameError(false);\n      setUsernameErrorMsg('');\n    }\n    if (password.length < 8 || password.length > 60) {\n      setPasswordError(true);\n      setPasswordErrorMsg('Password must be greater than 8 characters'\n        + ' and less than 60 characters');\n      error = true;\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMsg('');\n    }\n    if (email === '' || !validateEmail(email)) {\n      setEmailError(true);\n      setEmailErrorMsg('Please enter a valid email address format');\n      error = true;\n    } else {\n      setEmailError(false);\n      setEmailErrorMsg('');\n    }\n    if (name === '') {\n      setNameError(true);\n      setNameErrorMsg('Name cannot be empty');\n      error = true;\n    } else {\n      setNameError(false);\n      setNameErrorMsg('');\n    }\n\n    if (!error) {\n      callBack();\n    };\n  };\n\n  // Checks that user entered login information correctly\n  const handleOnSignInSubmit = (username, password, callBack) => {\n    let error = false;\n    if (username === '') {\n      setUsernameError(true);\n      setUsernameErrorMsg('Username cannot be empty');\n      error = true;\n    } else {\n      setUsernameError(false);\n      setUsernameErrorMsg('');\n    }\n    if (password === '') {\n      setPasswordError(true);\n      setPasswordErrorMsg('Password cannot be empty');\n      error = true;\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMsg('');\n    }\n\n    if (!error) {\n      callBack();\n    };\n  };\n\n  // Handles creation of account\n  const handleSignUp = async (username, password, email, name) => {\n    try {\n      // Encode username, password & email they may have special symbols\n      username = encodeURIComponent(username);\n      password = encodeURIComponent(password);\n      email = encodeURIComponent(email);\n      name = encodeURIComponent(name);\n\n      // Check if username is taken and email is valid then add to Datastore\n      const response = await axios.post(\n        `/sign-up?username=${username}\n              &password=${password}&email=${email}&name=${name}`);\n\n      if (response.status !== 200) {\n        setUsernameError(true);\n        setUsernameErrorMsg('Unable to sign up at this time please try again');\n        setPasswordError(true);\n        setPasswordErrorMsg('Unable to sign up at this time please try again');\n        setEmailError(true);\n        setEmailErrorMsg('Unable to sign up at this time please try again');\n        setNameError(true);\n        setNameErrorMsg('Unable to sign up at this time please try again');\n        return;\n      }\n\n      // Get information about whether username or email is taken from response\n      const errors = response.data;\n      const usernameExists = errors[0];\n      const emailExists = errors[1];\n\n      // Let user known what type of error occurred\n      if (usernameExists) {\n        setUsernameError(true);\n        setUsernameErrorMsg('Username is already taken');\n      }\n      if (emailExists) {\n        setEmailError(true);\n        setEmailErrorMsg('Email address has already been used');\n      }\n      if (usernameExists || emailExists) return;\n      dispatch(signIn({\n        username: username, email: email, name: name, avatar: \"0\"\n      }));\n      dispatch(loadUsers(username));\n      dispatch(loadInitialProjects(username));\n      history.push('/projects');\n    } catch (err) {\n      // If error occurs notify user\n      if (err) {\n        setUsernameError(true);\n        setUsernameErrorMsg(err.message);\n        setPasswordError(true);\n        setPasswordErrorMsg(err.message);\n      };\n    };\n  };\n\n  // Handles account login\n  const handleSignIn = async (username, password) => {\n    // Encode username and password - it may have # $ & + ,  / : ; = ? @ [ ]\n    username = encodeURIComponent(username);\n    password = encodeURIComponent(password);\n\n    try {\n      const response = await axios.post(\n        `/sign-in?username=${username}\n              &password=${password}`);\n\n      if (response.status === 200) { \n        // Direct user to next page\n        const errorAndInfo = response.data;\n        const userExists = errorAndInfo[0] === 'true' ? true : false;\n        if (!userExists) {\n          setUsernameError(true);\n          setUsernameErrorMsg('Username or password entered incorrectly');\n          setPasswordError(true);\n          setPasswordErrorMsg('Username or password entered incorrectly');\n        } else {\n          const isVisible = errorAndInfo[3] === 'true' ? true : false;\n          dispatch(signIn({\n            username: username, email: errorAndInfo[1],\n            name: errorAndInfo[2], isVisible: isVisible, avatar: errorAndInfo[4]\n          }));\n          dispatch(loadUsers(username));\n          dispatch(loadInitialProjects(username));\n          history.push('/projects');\n        }\n      } else {\n        setUsernameError(true);\n        setUsernameErrorMsg('Unable to sign in at this time please try again');\n        setPasswordError(true);\n        setPasswordErrorMsg('Unable to sign in at this time please try again');\n      }\n    } catch (err) {\n      if (err) {\n        setUsernameError(true);\n        setUsernameErrorMsg(err.message);\n        setPasswordError(true);\n        setPasswordErrorMsg(err.message);\n      };\n    };\n  };\n\n  //Render signup modal with input fields for user\n  const renderSignUp = () => {\n    return (\n      <div className=\"user_details\">\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            id=\"name_input\"\n            required=\"required\"\n            label=\"name_input\"\n            className=\"Auth_input\"\n            onChange={e => setName(e.target.value)}\n            value={name}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignUpSubmit(username, password, email, name,\n                  () => handleSignUp(username, password, email, name))\n              )\n            }\n          />\n          <span className=\"placeholder\">\n            Name\n          </span>        \n        </div>\n        {nameError && (\n            <span className=\"error\">{nameErrorMsg}</span>)}\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            label=\"username_input\"\n            required=\"required\"\n            className=\"Auth_input\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignInSubmit(username, password,\n                  () => handleSignIn(username, password))\n              )\n            }\n          />\n          <span className=\"placeholder\">\n            Username\n          </span>\n        </div>\n        {usernameError && (\n            <span className=\"error\">{usernameErrorMsg}</span>)}\n        <div className=\"input\">\n          <input\n            type=\"password\"\n            required=\"required\"\n            label=\"password_input\"\n            className=\"Auth_input\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignInSubmit(username, password,\n                  () => handleSignIn(username, password))\n              )\n            }\n          />\n          <span className=\"placeholder\">\n            Password\n          </span>\n        </div>\n        {passwordError && (\n            <span className=\"error\">{passwordErrorMsg}</span>)}\n\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            required=\"required\"\n            label=\"email_input\"\n            className=\"Auth_input\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignUpSubmit(username, password, email, name,\n                  () => handleSignUp(username, password, email, name))\n              )\n            }\n          />\n          <span className=\"placeholder\">\n            Email\n          </span>\n          \n        </div>\n        {emailError && (\n            <span className=\"error\">{emailErrorMsg}</span>)}\n        <div className=\"Sign_up_button_container\">\n          <button\n            className=\"Sign_up_button\"\n            onClick={() => handleOnSignUpSubmit(username, password, email, name,\n              () => handleSignUp(username, password, email, name))}\n          >\n            Sign Up\n            </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Render sign in Modal with input fields\n  const renderSignIn = () => {\n    return (\n\n      <div className=\"user_details\">\n        <div className=\"input\">\n        \n          <input\n            type=\"text\"\n            name=\"username_input\"\n            className=\"Auth_input\"\n            required=\"required\"\n            onChange={e => setUsername(e.target.value)}\n            value={username}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignInSubmit(username, password,\n                  () => handleSignIn(username, password))\n              )\n            } />\n          <span className=\"placeholder\">\n          Username\n          </span>\n        </div>\n          {usernameError && (\n            <span className=\"error\">{usernameErrorMsg}</span>\n          )}\n\n        <div className=\"input\">\n          <input\n            type=\"password\"\n            required=\"required\"\n            name=\"password_input\"\n            className=\"Auth_input\"\n            onChange={e => setPassword(e.target.value)}\n            value={password}\n            autoComplete=\"off\"\n            onKeyPress={e =>\n              handleKeyPress(e, () =>\n                handleOnSignInSubmit(username, password,\n                  () => handleSignIn(username, password))\n              )\n            } />\n          <span className=\"placeholder\">\n            Password\n          </span>\n        </div>\n        {passwordError && (\n            <span className=\"error\">{passwordErrorMsg}</span>\n          )}\n\n        <div className=\"Sign_in_button_container\">\n          <button\n            className=\"Sign_up_button\"\n            onClick={() => handleOnSignInSubmit(username, password,\n              () => handleSignIn(username, password))}>\n            Log In\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n\n  return (\n    <div className=\"Auth_container\">\n      <div className=\"Auth_header\">\n\n        <div className=\"nine\">\n          <h1>COLLABCODE<span> code, create, and collaborate</span></h1>\n        </div>\n      </div>\n\n\n      <div className=\"Auth_main\">\n        <div className=\"Auth_content card\">\n          <div className=\"Auth_buttons_container\">\n            {displaySignIn ? (\n            <button className=\"Auth_button left_button\" onClick={openSignIn}>\n              SIGN IN\n            </button>) :\n\n            <button className=\"Auth_button left_button \" onClick={openSignUp}>\n              SIGN UP\n            </button> }\n          </div>\n\n          <div className=\"Signin_signup\">\n            <div className=\"dummy_sign_in visible_sign_in\" ref={signInRef} >\n              {renderSignIn()}\n            </div>\n\n            <div className=\"dummy_sign_up hidden_sign_up\" ref={signUpRef}>\n              {renderSignUp()}\n            </div>\n          </div>\n          \n          {displaySignIn ? \n            (<h5><span>New to CollabCode?</span></h5>) :\n            (<h5><span>Already have an account?</span></h5>)}\n          \n          {!displaySignIn ? (\n            <button className=\"Auth_button right_button\" onClick={openSignIn}>\n              SIGN IN\n            </button>) :\n\n            <button className=\"Auth_button right_button \" onClick={openSignUp}>\n              SIGN UP\n            </button> }\n\n        </div>\n\n      </div>\n\n    </div>\n\n\n  );\n}\n\nexport default Auth;\n","import React from 'react';\n//import MinimizeIcon from '@material-ui/icons/Minimize';\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport './Pane.css';\n\nconst Pane = (props) => {\n  const { language, displayName, value, socket, projectid } = props;\n  \n  const handleChange = (editor, data, value) => {\n    let type = \"SEND_\" + displayName;\n    let msg = JSON.stringify({ id: projectid, type: type, data: value })\n    socket.send(msg);\n  } \n\n  return (\n    <div className=\"Pane_container\">\n      <div className=\"Pane_title\">\n        {displayName}\n      </div>\n\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"Pane_code_mirror_wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          lineNumbers: true,\n          theme: 'material'\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Pane\n","export default __webpack_public_path__ + \"static/media/avatar-1.206df2ea.png\";","export default __webpack_public_path__ + \"static/media/avatar-2.ce1e904e.png\";","export default __webpack_public_path__ + \"static/media/avatar-3.ba79463c.png\";","export default __webpack_public_path__ + \"static/media/avatar-4.607dde39.png\";","export default __webpack_public_path__ + \"static/media/avatar-5.1cc5e5b8.png\";","export default __webpack_public_path__ + \"static/media/avatar-6.af51b5dd.png\";","export default __webpack_public_path__ + \"static/media/avatar-7.61998959.png\";","export default __webpack_public_path__ + \"static/media/avatar-8.d272d87a.png\";","import React, { useEffect, useRef, useState } from 'react';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport './Profile.css';\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\n\n// Change email to some other parameter later, don't want to expose\n// people's emails unnecessarily\nconst Profile = (props) => {\n  const {name, avatar, email, side, active, isUser, handleSave, \n\t  handleReturn} = props;\n  const [displayMenu, setDisplayMenu] = useState(false);\n  const menuRef = useRef();\n  const iconRef = useRef();\n\n  const handleClick = callback => {\n    setDisplayMenu(prevState => !prevState);\n    callback();\n  }\n\n  const addAvatar = () => {\n    switch (avatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  } \n \n  useEffect(() => {\n    displayMenu ? menuRef.current.style.display = \"flex\" : menuRef.current.style.display = \"none\";\n     const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target) && \n          iconRef.current && !iconRef.current.contains(event.target) && displayMenu) {      \n        setDisplayMenu(prevState => !prevState);     \n      }\n    };\n  \n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n\n  }, [displayMenu]);\n\n\n  return (\n    <div className={`Profile_container ${side === \"R\" ? \"Profile_flipped\" : \"\"}`}>\n      <div className={`Profile_image ${!isUser ? \"other_user\" : \"\"}`}\n        ref={iconRef} \n          onClick={() => setDisplayMenu(prevState => !prevState)}>\n          {avatar !== \"0\" ?\n          (<img src={addAvatar()} className=\"Profile_icon\" alt=\"avatar\"/>) : \n          (<AccountCircleIcon style = {{fontSize: 40}} />)}\n          <div className={`Profile_activity ${active ? \"active_user\" : \"inactive_user\"} ${side === \"R\" ? \"right\" : \"left\"}`}></div>      </div>\n      <div className={`Profile_details  ${side === \"R\" ? \"details_right\" : \"details_left\"}`}>\n        <span className=\"Profile_name\">\n          {name}\n        </span>\n        <span className=\"Profile_email\">\n          {email}\n        </span>\n      </div>\n      {isUser ?\n        <div className=\"Editor_profile_menu\" ref={menuRef}>       \n          <span className=\"Editor_options\">\n            Options\n          </span>         \n          <ul>\n            <li onClick={() => handleClick(handleSave)}>\n              <SaveIcon className=\"Editor_profile_menu_icon\"/>\n              <span>\n                Save project\n              </span>\n            </li>\n            <li onClick={() => handleClick(handleReturn)}>\n              <ExitToAppIcon className=\"Editor_profile_menu_icon\"/>\n              <span>\n                Return to projects page\n              </span>\n            </li>\n          </ul>\n        </div>\n       : <div ref={menuRef}></div> \n      }\n    </div>\n  );\n}\n\nexport default Profile\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Navbar.css';\nimport Profile from './Profile.js';\nimport { ACTION } from '../../actions/types.js';\nimport { clearProject } from '../../actions';\n\nconst Navbar = (props) => {\n  const { title, projectName, handleSave, \n\t  history, socket, projectid, collaborator, collaboratorName, \n\t  collaboratorAvatar } = props;\n  const user = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const handleChange = elt => {\n    let msg = JSON.stringify({ type: ACTION.SEND_TITLE, id: projectid, \n\t    data: elt.target.value })\n    socket.send(msg);\n  }\n\n  // called when user clicks on Profile\n  const handleReturn = () => {\n    dispatch(clearProject());\n    let msg = JSON.stringify({ id: collaborator, type: ACTION.SEND_LEFT, \n\t    data: collaboratorName });\n    socket.send(msg);\n    history.push('/projects');\n  }\n\n\n  return (\n      <div className=\"Navbar_container\">\n        <Profile\n          name={collaboratorName}\n          avatar={collaboratorAvatar}\n          email=\"\"\n          side=\"L\"\n          active={true}\n          isUser={false}\n\t        handleReturn={handleReturn}\n          handleSave={handleSave}/>\n\n        <div className=\"Navbar_title_container\">\n          <input \n            type=\"text\"\n            className=\"Navbar_title\"\n            placeholder={title}\n            name=\"title_input\" \n            autoComplete=\"off\" \n            id=\"title_input\"\n            value={projectName}\n            onChange={handleChange}/>\n        </div>\n        \n        <Profile\n          name={user.name}\n          avatar={user.avatar}\n          side=\"R\"\n          active={true}\n          isUser={true}\n\t        handleReturn={handleReturn}\n          handleSave={handleSave}/>\n      </div>\n  );\n}\n\nexport default Navbar\n","import React from 'react';\nimport './StaticProgressBar.css';\n\nfunction StaticProgressBar() {\n  return (\n    <div className=\"StaticProgress_container\">\n      <div className=\"static_line\"></div>\n    </div>\n  );\n}\n\nexport default StaticProgressBar\n","import React from 'react';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport './StopCollab.css';\nimport './StaticProgressBar.js';\nimport InfoIcon from '@material-ui/icons/Info';\nimport StaticProgressBar from './StaticProgressBar.js';\n\nfunction StopCollab(props) {\n  const { collaboratorName, open } = props; \n  return (\n    <Dialog open={open}>\n      <DialogContent>\n        <div className=\"StopCollab_container\"> \n          <div className=\"dialog_icon\">\n            <InfoIcon style={{fontSize: 40}}/>\n          </div>\n          <span className=\"StopCollab_header\">\n            {collaboratorName} has stopped  editing. Your work is being saved now...\n          </span>\n          <StaticProgressBar />\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default StopCollab\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Pane from './Pane.js';\nimport Navbar from './Navbar.js';\nimport './Editor.css';\nimport './StopCollab.js';\nimport html2canvas from 'html2canvas';\nimport FormData from 'form-data'\nimport { handleSave, clearProject } from '../../actions';\nimport SocketSingleton from '../../middleware/socketMiddleware';\nimport { ACTION } from '../../actions/types.js';\nimport StopCollab from './StopCollab.js';\n\n\nconst Editor = ({ history }) => {\n  const dispatch = useDispatch();\n  const { html, css, js, title, activeProject, collaboratorId, \n\t  collaboratorName, collaboratorAvatar } = \n\t\tuseSelector((state) => state.projectReducer);\n  \n  // I don't think we can use the \"projecthtml\" useState variables\n  // For the sockets we need a way to update text changes within the text editors themselves\n  // when the user types, but also store those changes to the \"html\", \"css\", \"js\" variables\n  // in the React Store for database saving. We also have to figure out a way to send updates\n  // to each editor through sockets and have them update on the collaborator's end\n  // We can either add a JQuery function to each editor component that has the socket actions\n  // embded into the function and directly sending changes with stuff like OnKeyPress for each\n  // editor component. Or we can disregard storing into in the react store entirely and just\n  // send the current projecthtml, projectcss, projectjs to the backend whenever the user clicks\n  // save \n  const [projecthtml, setProjectHtml] = useState(html);\n  const [projectcss, setProjectCss] = useState(css);\n  const [projectjs, setProjectJs] = useState(js);\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [projectName, setProjectName] = useState(title);\n  const socket = SocketSingleton.getInstance();\n  const [displayExit, setDisplayExit] = useState(false);\n\n\n  window.onpopstate = e => {\n    console.log(\"Out\");\n    dispatch(clearProject());\n    let msg = JSON.stringify({ id: collaboratorId, type: ACTION.SEND_LEFT, \n\t    data: collaboratorName });\n    socket.send(msg);\n    history.push('/projects');\n }\n  \n  socket.onmessage = (response) => {\n    let message = JSON.parse(response.data);\n    switch (message.type) {\n      case ACTION.SEND_HTML:\n\tsetProjectHtml(message.data)\n\tbreak;\n      case ACTION.SEND_CSS:\n\tsetProjectCss(message.data)\n\tbreak;\n      case ACTION.SEND_JS:\n\tsetProjectJs(message.data)\n\tbreak;\n      case ACTION.SEND_TITLE:\n\tsetProjectName(message.data);\n\tbreak;\n      case ACTION.SEND_LEFT:\n        setDisplayExit(true);\n        save();\n        let timer = setTimeout(() => {\n          history.push('/projects');\n        }, 4000);\n        return () => clearTimeout(timer);\n      default:\n    }\n  }\n\n  const save = () => {\n    html2canvas(document.querySelector(\"#render_pane\")).then(canvas => {\n      canvas.toBlob((blob) => {\n        let formData = new FormData();\n        formData.append(\"image\", blob);\n\n        dispatch(handleSave({\n          html: projecthtml,\n          css: projectcss,\n          js: projectjs,\n          projectid: activeProject,\n          title: projectName,\n          image: formData,\n        }));\n      });\n    })\n  }\n  \n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body>${projecthtml}</body>\n        <style>${projectcss}</style>\n        <script>${projectjs}</script>\n      </html>\n      `)\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [projecthtml, projectcss, projectjs]);\n\n  return (\n    <div className=\"Editor_container\">\n      <Navbar\n        history={history}\n        projectName={projectName}\n        socket={socket}\n        title={title}\n        collaborator={collaboratorId}\n        collaboratorName={collaboratorName}\n        collaboratorAvatar={collaboratorAvatar}\n        projectid={activeProject}\n        handleSave={save}/>\n\n      <div className=\"Editor_pane Editor_top_pane\" id=\"render_pane\">\n        <Pane \n         language=\"xml\"\n         displayName=\"HTML\"\n         value={projecthtml}\n         socket={socket}\n         projectid={activeProject}/>\n\n        <Pane \n         language=\"css\"\n         displayName=\"CSS\"\n         value={projectcss}\n         socket={socket}\n         projectid={activeProject}/>\n\n        <Pane \n         language=\"javascript\"\n         displayName=\"JS\"\n         value={projectjs}\n\t       socket={socket}\n       \t projectid={activeProject}/>\n\n      </div>\n\n      <div id=\"render_pane\" className=\"Editor_pane Editor_bottom_pane\">\n        <iframe \n          title=\"output\"\n          srcDoc={srcDoc}\n          sandbox=\"allow-scripts allow-same-origin\"\n          width=\"100%\"\n          height=\"100%\"/>\n      </div>\n\n      <StopCollab \n        collaboratorName={collaboratorName}\n        open={displayExit}/>\n    </div>\n  );\n}\n\nexport default Editor;\n","import React, { useEffect, useRef } from 'react';\nimport './User.css';\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst User = (props) => {\n\n  const { name, isActive, onClick, avatar } = props;\n  const nameRef = useRef();\n\n  const isOverflowing = (elt) => {\n    return elt.offsetWidth < elt.scrollWidth;\n  }\n\n  // add scroll effect when text overflows\n  useEffect(() => {\n    if (isOverflowing(nameRef.current)) {\n      nameRef.current.classList.add(\"marquee\");\n    }\n  });\n\n\n  const addAvatar = () => {\n    switch (avatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  }\n\n  return (\n    <div className=\"User_container\" onClick={onClick}>\n      <div className=\"User_image_container\">\n        <div className=\"User_image\">\n          {avatar !== \"0\" ?\n            (<img src={addAvatar()} className=\"current_icon\" alt=\"Current avatar\"/>) : \n            (<AccountCircleIcon style = {{fontSize: 40}} />)}\n            <div className=\"User_activity\">\n              {isActive ?\n              <div className=\"active\"></div> :\n              <div className=\"inactive\"></div>}\n            </div>\n\t          \n        </div>\n      </div>\n      <span className=\"User_name\" ref={nameRef}>\n        {name}\n      </span>\n    </div>\n  );\n}\n\nexport default User\n\n","import React from 'react';\nimport './ConnectedUsers.css';\nimport User from './User.js';\n\nconst ConnectedUsers = (props) => {\n  \n  const { activeUsers, contacts, onActiveUserClick, onRecentUserClick, isVisible } = props;\n  const actives = activeUsers.map((user) => (\n   <User\n      key={user.username}\n      name={user.name}\n      isActive={user.isActive}\n      onClick={() => onActiveUserClick(user.name, user.username, user.avatar)}\n      avatar={user.avatar}/>\n  ));\n\n  const recentContacts = contacts.map((user) => (\n    <User\n      key={user.username}\n      name={user.name}\n      isActive={user.isActive}\n      onClick={() => onRecentUserClick(user.username, user.name, user.isActive, user.avatar)}\n      avatar={user.avatar}/>\n  ));\n\n  return (\n    <div className=\"ConnectedUsers_container card\">\n      <span className=\"ConnectedUsers_label\">Recent contacts</span>\n      {recentContacts.length > 0 && isVisible? \n        recentContacts : \n        (<span className=\"no_users\">No recent contacts</span>)}\n\n      <span className=\"ConnectedUsers_label top\">Active users</span>\n      {actives.length > 0 && isVisible? \n        actives : \n        (<span className=\"no_users\">No active users</span>)}\n    </div>\n  );\n}\n\nexport default ConnectedUsers\n","import React, { useEffect, useRef, useState } from 'react';\nimport './Searchbar.css';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst Searchbar = (props) => {\n  const { query, onChange } = props;\n  const searchBarRef = useRef();\n  const [focus, setFocus] = useState(false);\n\n  const handleChange = elt => {\n    onChange(elt.target.value);\n  }\n\n  useEffect(() => {\n    focus ? \n      searchBarRef.current.classList.add(\"Searchbar_container_focused\") : \n      searchBarRef.current.classList.remove(\"Searchbar_container_focused\");\n  }, [focus]);\n\n  return (\n    <div className=\"Searchbar_container card\" ref={searchBarRef}>\n\n      <div className=\"Searchbar_icon_container\">\n        <SearchIcon className=\"Searchbar_icon\"/>\n      </div>\n      \n      <input \n        type=\"text\"\n        value={query}\n        onChange={handleChange}\n        placeholder=\"Search for a project\"\n        onFocus={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n        className=\"Searchbar_input\"/>\n    </div>\n  );\n}\n\nexport default Searchbar\n","import React from 'react';\nimport \"./Notification.css\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\n\n\nconst Notification = (props) => {\n  const { collaboratorName, accept, decline, isNewProject, projectTitle, collaboratorAvatar } = props;\n\n  const addAvatar = () => {\n    switch (collaboratorAvatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  } \n\n  const getMessage = (create) => {\n    if (create) {\n      return `${collaboratorName} is inviting you to CREATE a new project`\n    } else {\n      return `${collaboratorName} is inviting you to CONTINUE working on ${projectTitle}`\n    }\n  }\n  \n  return (\n    <div className=\"Notification_container\">\n      <div className=\"user_icon\">\n      {collaboratorAvatar !== \"0\" ?\n        (<img src={addAvatar()} className=\"current_icon\" alt=\"Current avatar\"/>) : \n        (<AccountCircleIcon style = {{fontSize: 40}} />)}\n      </div>\n\n      <div className=\"Notification_side\">     \n        <span className=\"Notification_title\">\n          {getMessage(isNewProject)}\n        </span>\n\n        <div className=\"Notification_buttons\">\n        <button className=\"Notification_button_decline\" onClick={decline}>DECLINE</button>\n        <button className=\"Notification_button_accept\" onClick={accept}>ACCEPT</button>\n      </div>   \n      </div> \n    </div>\n  )\n}\n\nexport default Notification\n","export default __webpack_public_path__ + \"static/media/banner.c68bbcc5.png\";","import React, { useEffect, useRef, useState } from 'react';\nimport './Header.css';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Notification from './Notification.js';\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\nimport Banner from \"../../images/banner.png\";\n\n\nconst Header = (props) => {\n  const { name, email, handleLogout, displayProfile, notifications, avatar, accept, decline,\n  acceptCallBack, declineCallBack, history } = props;\n  const [displayMenu, setDisplayMenu] = useState(false);\n  const [displayNotifications, setDisplayNotifications] = useState(false);\n  const menuRef = useRef();\n  const notificationsRef = useRef();\n  const userIconRef = useRef();\n  const notificationIconRef = useRef();\n\n\n  const addAvatar = () => {\n    switch (avatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  } \n\n\n  const handleClick = callback => {\n    setDisplayMenu(prevState => !prevState);\n    callback();\n  }\n\n  const renderNotifications = () => {\n    return notifications.map((notification) => (\n      <Notification\n        key={`Notification_${notifications.indexOf(notification)}`}\n        collaboratorName={notification.collaboratorName}\n        accept={() => accept(notification, \n\t\t() => acceptCallBack(notification.type, notification.proj))}\n        decline={() => decline(notification, \n\t\t() => declineCallBack(notification.collaborator, notification.type))}\n        isNewProject={notification.isNewProject}\n        projectTitle={notification.projectTitle}\n        collaboratorAvatar={notification.collaboratorAvatar}/>\n     ));\n  }\n\n\n  useEffect(() => {\n    displayNotifications ? notificationsRef.current.style.display = \"flex\" : notificationsRef.current.style.display = \"none\";\n     const handleClickOutside = (event) => {\n      if (notificationsRef.current && !notificationsRef.current.contains(event.target) && \n          notificationIconRef.current && !notificationIconRef.current.contains(event.target) && displayNotifications) {      \n        setDisplayNotifications(false);     \n      }\n    };\n  \n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n\n  }, [displayNotifications]);\n\n\n  useEffect(() => {\n    displayMenu ? menuRef.current.style.display = \"flex\" : menuRef.current.style.display = \"none\";\n     const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target) && \n          userIconRef.current && !userIconRef.current.contains(event.target) && displayMenu) {      \n        setDisplayMenu(false);     \n      }\n    };\n  \n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n\n  }, [displayMenu]);\n\n  const reload = () => {\n    history.push(\"/projects\");\n  }\n\n  return (\n    <div className=\"Header_container\">\n      <div className=\"Banner\">\n        <img src={Banner} alt=\"Banner\" className=\"main_icon\" onClick={reload}/>\n      </div>\n\n      <div className=\"Header_user\">\n        <div \n          className={`Header_notifications_icon ${notifications.length > 0 && !displayNotifications ? \n            \"notification_animation\" : \"\"}`}\n          ref={notificationIconRef}>\n          <NotificationsIcon style={{ fontSize: 40 }}\n          onClick={() => setDisplayNotifications(prevState => !prevState)}/>\n\n          {notifications.length > 0 && (\n            <div className=\"Notifications_count_container\">\n              <span className=\"Notifications_count\">{notifications.length}</span>\n            </div>)}\n        </div>\n\n        <div className=\"Header_user_icon\" \n          ref={userIconRef} \n          onClick={() => setDisplayMenu(prevState => !prevState)}>\n          {avatar !== \"0\" ?\n            (<img src={addAvatar()} className=\"current_icon\" alt=\"Current avatar\"/>) : \n            (<AccountCircleIcon style = {{fontSize: 40}} />)}\n        </div>\n\n        <div className=\"Header_notifications menu\" ref={notificationsRef}>\n          {notifications.length > 0 ? ( \n            <div className=\"Notification_main\">\n              <span className=\"Notifications_title\">Notifications</span>          \n              {renderNotifications()}\n            </div>\n                    \n            ) : (\n            <span className=\"no_notifications\">\n              You do not have any notifications\n            </span>\n          )}       \n        </div>\n\n\n        <div className=\"Header_menu menu\" ref={menuRef}>\n          <div className=\"Header_user_details\">\n            <span className=\"Header_user_name\">\n              {name}\n            </span>\n            <span className=\"Header_user_email\">\n              {email}\n            </span>\n          </div>\n          <ul>\n            <li onClick={() => handleClick(displayProfile)}>\n              <AccountCircleIcon className=\"Header_menu_icon\"/>\n              <span>\n                Profile\n              </span>\n            </li>\n            <li onClick={() => handleClick(handleLogout)}>\n              <ExitToAppIcon className=\"Header_menu_icon\"/>\n              <span>\n                Logout\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header\n","import React from 'react';\nimport \"./AspectRatio.css\";\n\nconst AspectRatio = (child) => {\n  return (\n    <div className=\"AspectRatio\">\n      <div className=\"AspectRatio-innerWrapper\">{child}</div>\n    </div>\n  );\n}\n\nexport default AspectRatio;\n","import React from 'react';\nimport './ProjectCard.css';\nimport AspectRatio from './AspectRatio.js';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nconst ProjectCard = (props) => {\n  const { title, collaboratorName, downloadProject, continueProject, image } = props;\n\n  return (\n    <div className=\"Project_container card\">\n      {AspectRatio(\n        <div className=\"Project_icon\">\n          <img src={image} alt=\"Project Icon\" className=\"Project_image\"/>\n        </div>\n      )}    \n      <span className=\"Project_title\">\n        {title}\n      </span>\n      <span className=\"Project_collaborator\">\n        {`Collaborator: ${collaboratorName}`}\n      </span>\n\n      <div className=\"Project_options\">\n        <button className=\"download\" onClick={downloadProject}>\n          <GetAppIcon />\n          <span className=\"button_text\">\n            Download\n          </span>\n        </button>\n\n        <button className=\"continue\" onClick={continueProject}>\n          <PlayArrowIcon />\n          <span className=\"button_text\">\n            Continue\n          </span>\n        </button>\n      </div>\n       \n    </div>\n  );\n}\n\nexport default ProjectCard\n","import React from 'react';\nimport './ProgressSpinner.css';\n\nconst ProgressSpinner = () => {\n  return (\n    <div className=\"Progress_container\">\n      \n      <div className=\"line-base\"></div>\n      <div className=\"line\"></div>\n    </div>\n  );\n}\n\nexport default ProgressSpinner\n","import React, { useRef } from 'react';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './ConnectionDialog.css';\nimport ProgressSpinner from './ProgressSpinner.js';\nimport { createProject, loadUsers, selectCollab } from '../../actions';\nimport { ACTION } from '../../actions/types.js'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\n\nconst ConnectionDialog = (props) => {\n  const dispatch = useDispatch();\n  const { collaboratorId, collaboratorName, isOpen, closeDialog, fromProject, \n\t  message, socket, isActive, history } = props;\n  const optionsRef = useRef();\n  const user = useSelector((state) => state.userReducer);\n  const { activeProject, title } = useSelector((state) => state.projectReducer);\n\n  socket.onmessage = (response) => {\n    let message = JSON.parse(response.data)\n    let type = message.data.split(\"-\")\n    let answer = type[0];\n    switch (message.type) {\n      case \"REC_CREATE_PING\":\n        if(answer === \"yes\"){\n\t   newProject();\n        } else {\n          closeDialog();\n        }\n\tbreak;\n      case \"REC_CONTINUE_PING\":\n        if(answer === \"yes\"){\n\t  dispatch(selectCollab({ username: collaboratorId, name: collaboratorName, \n\t\t  avatar: type[1] }));\n    history.push(\"/editor\");\n        } else {\n          closeDialog();\n        }\n\t    break;\n      default:\n    }\n  }\n\n  const displayConnectionStatus = () => {\n    if (isActive) {\n      optionsRef.current.classList.add(\"ConnectionDialog_hide_options\");\n      if (fromProject) {\n        let data = `continue=${user.username}=${user.name}=${user.avatar}=${activeProject}=${title}`;\n        let msg = JSON.stringify({ id: collaboratorId, type: ACTION.PING_USER, data: data })\n        socket.send(msg)\n      } else {\n        let data = `create=${user.username}=${user.name}=${user.avatar}`;\n        let msg = JSON.stringify({ id: collaboratorId, type: ACTION.PING_USER, data: data })\n        socket.send(msg)\n      }\n    } else {\n\n    }\n  }\n\n  const newProject = () => {\n    const defaultImage = \"https://storage.googleapis.com/spring21-sps-18.appspot.com/css.jpg\";\n    dispatch(createProject({ username: user.username, \n\t    collaborator: collaboratorId, title: \"New Project\", image: defaultImage }));\n    closeDialog();\n    dispatch(loadUsers(user.username));\n  }\n\n  const cancelInvite = () => {\n    let msg = {};\n    let data = `cancel=${user.username}=${user.name}=${user.avatar}=${activeProject}=${title}`;\n    msg = JSON.stringify({ id: collaboratorId, type: ACTION.PING_USER, data: data })\n    socket.send(msg);\n    closeDialog();\n  }\n\n  return (\n    <Dialog open={isOpen}>\n      <DialogContent>\n        \n        <div className=\"ConnectionDialog_container\"> \n          <span className=\"ConnectionDialog_header\">\n            Connecting\n          </span>\n          <span className=\"ConnectionDialog_summary\">\n            {`Waiting for ${collaboratorName} to connect...`}\n          </span>\n          <ProgressSpinner />\n          <div className=\"ConnectionDialog_button_container\">\n            <button className=\"ConnectionDialog_button\" onClick={cancelInvite}>\n              CANCEL\n            </button>\n          </div>\n        </div>\n\n        {!isActive && ( \n          <div className=\"ConnectionDialog_options\">\n\n            <div className=\"Icon_container\">\n              <ErrorOutlineIcon style={{ fontSize: 40, color: \"gray\" }}/>\n            </div>\n            <span className=\"AlertDialog_message\">You cannot collaborate with anyone when you are appearing offline.</span>      \n\n            <div className=\"AlertDialog_button_container\">\n            <button className=\"AlertDialog_button\" onClick={closeDialog}>CLOSE</button>\n          </div>\n          </div>       \n        )}\n        \n        {isActive && (\n        <div className=\"ConnectionDialog_options\" ref={optionsRef}>\n          <span className=\"ConnectionDialog_header\">\n            Invite to collaborate?\n          </span>\n          <div className=\"Connection_Body\">\n          </div>\n          <span className=\"ConnectionDialog_alert\"> \n            {message}\n          </span>\n          <div className=\"Connection_confirm_button_container\">\n            <button className=\"Connection_confirm_button left\" onClick={displayConnectionStatus}>\n              YES\n            </button>\n            <button className=\"Connection_confirm_button right\" onClick={closeDialog}>\n              NO\n            </button>\n          </div>\n        </div>)}\n\t      \n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default ConnectionDialog\n","import React from 'react';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport './AlertDialog.css'\n\nconst AlertDialog = (props) => {\n  const { isOpen, closeDialog, message } = props;\n\n  return (\n    <Dialog open={isOpen}>\n      <DialogContent>\n        <div className=\"AlertDialog_container\">\n          <div className=\"AlertIcon_container\">\n            <ErrorOutlineIcon style={{ fontSize: 40, color: \"gray\" }}/>\n          </div>\n          <span className=\"AlertDialog_message\">{message}</span>\n\n          <div className=\"AlertDialog_button_container\">\n            <button className=\"AlertDialog_button\" onClick={closeDialog}>CLOSE</button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default AlertDialog\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport './ProfileDialog.css'\nimport Icon_1 from \"../../images/avatar-1.png\";\nimport Icon_2 from \"../../images/avatar-2.png\";\nimport Icon_3 from \"../../images/avatar-3.png\";\nimport Icon_4 from \"../../images/avatar-4.png\";\nimport Icon_5 from \"../../images/avatar-5.png\";\nimport Icon_6 from \"../../images/avatar-6.png\";\nimport Icon_7 from \"../../images/avatar-7.png\";\nimport Icon_8 from \"../../images/avatar-8.png\";\n\nconst ProfileDialog = (props) => {\n  const { isOpen, name, currentOnlineStatus, closeDialog, saveProfile, avatar } = props;\n  const [updatedName, setUpdatedName] = useState(name);\n  const [updatedPassword, setUpdatedPassword] = useState(\"\");\n  const [showOnlineStatus, setShowOnlineStatus] = useState(currentOnlineStatus);\n  const [selectedAvatar, setSelectedAvatar] = useState(avatar);\n  const user = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const updateName = elt => {\n    setUpdatedName(elt.target.value)\n  }\n\n  const updatePassword = elt => {\n    setUpdatedPassword(elt.target.value)\n  }\n\n  const changeAvatar = (avatar) => {\n    switch (avatar) {\n      case \"1\":\n        return Icon_1;\n\n      case \"2\":\n        return Icon_2;\n\n      case \"3\":\n        return Icon_3;\n\n      case \"4\":\n        return Icon_4;\n\n      case \"5\":\n        return Icon_5;\n\n      case \"6\":\n        return Icon_6;\n\n      case \"7\":\n        return Icon_7;\n\n      case \"8\":\n        return Icon_8;\n      \n      default:\n        return;\n    }   \n  } \n\n  return (\n    <Dialog open={isOpen}>\n      <DialogContent>\n        <div className=\"ProfileDialog_container\">\n\n          <span className=\"ProfileDialog_header\">\n            Profile information\n          </span>\n\n          <div className=\"Update_profile_pic\">\n            <div className=\"Profile_current\">\n              {selectedAvatar !== \"0\" ? \n                (<img src={changeAvatar(selectedAvatar)} className=\"current_icon\" alt=\"Current avatar\"/>) : \n                (<AccountCircleIcon style={{fontSize: 90}}/>)}\n            </div>\n\n            <div className=\"Profile_new\">    \n              <span>Select new avatar</span>\n              <div className=\"profile_icons\">              \n                <img src={Icon_1} className=\"new_icon\" alt=\"Icon Option 1\" onClick={() => setSelectedAvatar(\"1\")}/>     \n                <img src={Icon_2} className=\"new_icon\" alt=\"Icon Option 2\" onClick={() => setSelectedAvatar(\"2\")}/> \n                <img src={Icon_3} className=\"new_icon\" alt=\"Icon Option 3\" onClick={() => setSelectedAvatar(\"3\")}/> \n                <img src={Icon_4} className=\"new_icon\" alt=\"Icon Option 4\" onClick={() => setSelectedAvatar(\"4\")}/> \n                <img src={Icon_5} className=\"new_icon\" alt=\"Icon Option 5\" onClick={() => setSelectedAvatar(\"5\")}/> \n                <img src={Icon_6} className=\"new_icon\" alt=\"Icon Option 6\" onClick={() => setSelectedAvatar(\"6\")}/> \n                <img src={Icon_7} className=\"new_icon\" alt=\"Icon Option 7\" onClick={() => setSelectedAvatar(\"7\")}/> \n                <img src={Icon_8} className=\"new_icon\" alt=\"Icon Option 8\" onClick={() => setSelectedAvatar(\"8\")}/>          \n              </div>        \n            </div>\n          </div>\n\n          <div className=\"ProfileDialog_inputs\">\n            <label htmlFor=\"name_input\" className=\"input_container input_left\">\n              <span className=\"Profile_input_label\">\n                Name\n              </span>\n              <input \n                type=\"text\"\n                name=\"name_input\"\n                value={updatedName}\n                onChange={updateName}\n                className=\"Profile_input\"/>\n            </label>\n            \n            <label htmlFor=\"username_input\" className=\"input_container input_right\">\n              <span className=\"Profile_input_label\">\n                Password\n              </span>\n              <input \n                type=\"password\"\n                name=\"username_input\"\n                onChange={updatePassword}\n                className=\"Profile_input\"/>\n            </label>       \n          </div> \n\n          <div className=\"ProfileDialog_toggle_container\">\n            <label htmlFor=\"status_toggle\" className=\"Profile_toggle\">\n              <input\n                type=\"checkbox\"\n                id=\"status_toggle\"\n                name=\"status_toggle\"\n                checked={showOnlineStatus}\n                onChange={() => setShowOnlineStatus(prevState => !prevState)}\n                className=\"Profile_toggle_input\"/>\n              <div className=\"Profile_toggle_fill\"></div>   \n              <span className=\"Toggle_label\">\n                Display online status \n              </span>       \n            </label>\n\n            <span className=\"online_status_message\">\n              If you do not display your online status, you will not be able to see other users \n              who are online\n            </span>\n          </div>\n\n          <div className=\"ProfileDialog_button_container\">\n            <button className=\"ProfileDialog_button left\" onClick={closeDialog}>CLOSE</button>\n            <button \n              className=\"ProfileDialog_button right\" \n              onClick={() => saveProfile(updatedName, updatedPassword, showOnlineStatus, selectedAvatar)}>SAVE</button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default ProfileDialog\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveAs } from 'file-saver';\nimport './Projects.css';\nimport ConnectedUsers from './ConnectedUsers.js';\nimport Searchbar from './Searchbar.js';\nimport Header from './Header.js';\nimport ProjectCard from './ProjectCard.js';\nimport ConnectionDialog from './ConnectionDialog.js';\nimport AlertDialog from './AlertDialog.js';\nimport ProfileDialog from './ProfileDialog.js';\nimport { changeName, chooseProject, clearReducer, updateActive, signOut, \n\tloadProjects, clearProject, changeAvatar, \n\tchangeVisibility, changePassword, selectCollab } from '../../actions';\nimport SocketSingleton from '../../middleware/socketMiddleware.js';\nimport { ACTION } from '../../actions/types.js';\n\nconst Projects = ({ history }) => {\n  // Get user from store\n  const user = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n  const { activeUsers, contacts, onlineProjects,\n\t  offlineProjects } = useSelector((state) => state.projectReducer);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [openConnectionDialog, setOpenConnectionDialog] = useState(false);\n  const [currentConnection, setCurrentConnection] = useState({});\n  const [displayedProjects, setDisplayedProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState(onlineProjects.concat(offlineProjects));\n  const [alertWarning, setAlertWarning] = useState(\"\");\n  const [openAlertDialog, setOpenAlertDialog] = useState(false);\n  const [allUsers, setAllUsers] = useState([]);\n  const [openProfileDialog, setOpenProfileDialog] = useState(false);\n  const [connectionAlert, setConnectionAlert] = useState(\"\");\n  const [loadingProjects, setLoadingProjects] = useState(true);\n  const [fromProject, setFromProject] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n\n  let socket = SocketSingleton.getInstance();\n  socket.onopen = () => {\n    let mes = JSON.stringify({ id: user.username, type: ACTION.SIGN_IN,\n      data: \"\" });\n    socket.send(mes);\n    let allPaneIDS = []\n    allProjects.forEach((project) => {\n      // Setup socket for each editor pane with specified project \n      let projectid = project.projectid;\n      allPaneIDS.push(projectid);\n    });\n\n    allPaneIDS.forEach(paneID => {\n      let messageDto = JSON.stringify({ id: paneID, \n\t  type: ACTION.LOAD_INIT_PROJECTS, data: \"\" })\n      socket.send(messageDto);\n    });\n\n  };\n\n  socket.onmessage = (response) => {\n    let msg = JSON.parse(response.data);\n    switch (msg.type) {\n      case ACTION.PING_USER:\n\tlet info_arr = msg.data.split(\"=\");\n\tlet ping_type = info_arr[0];\n\tlet collaboratorId = info_arr[1];\n\tlet collaboratorName = info_arr[2];\n\tlet collabAvatar = info_arr[3];\n  if (ping_type === \"cancel\") {\n    const updatedNotifications = notifications.filter((notification) => {\n      return notification.collaboratorId === collaboratorId;\n    })\n    setNotifications(updatedNotifications);\n  }\n\n\telse if (ping_type === \"create\") {\n    setNotifications([...notifications,\n\t\t  { collaboratorName: collaboratorName,\n\t\t    collaborator: collaboratorId,\n\t            isNewProject: true,\n\t\t    projectTitle: \"New Project\",\n\t\t    type: ping_type,\n\t\t    proj: collaboratorId,\n\t\t    collaboratorAvatar: collabAvatar,\n\t\t  }]);\n\t} else {\n\t  let projectid = info_arr[4];\n\t  let html = \"\";\n\t  let css = \"\";\n\t  let js = \"\";\n          for(var i = 0; i < onlineProjects.length; i++) {\n\t\tif (onlineProjects[i].projectid === projectid) {\n\t\t\thtml = onlineProjects[i].html\n\t\t\tcss = onlineProjects[i].css\n\t\t\tjs = onlineProjects[i].js\n\t\t\tbreak;\n\t\t}\n\t  }\n\t  let avatar = \"0\";\n          for(var j = 0; j < contacts.length; i++) {\n\t\tif (contacts[j].username === collaboratorId) {\n\t\t\tavatar = contacts[j].avatar\n\t\t\tbreak;\n\t\t}\n\t  }\n\t  let title = info_arr[5];\n\t  let proj = { collaborator: collaboratorId, collaboratorName: collaboratorName,\n\t\t  title: title, projectid: projectid, html: html, css: css, js: js,\n\t  avatar: avatar }\n          setNotifications([...notifications,\n\t\t  { collaboratorName: collaboratorName,\n\t\t    collaborator: collaboratorId,\n\t            isNewProject: false,\n\t\t    projectTitle: proj.title,\n\t\t    type: ping_type,\n\t\t    proj: proj,\n\t\t    collaboratorAvatar: collabAvatar,\n\t\t  }]);\n\t}\n\tbreak;\n      default:\n    }\n  }\n \n  window.onbeforeunload = () => {\n    socket.onclose = () => {\n    }\n  }\n\n\t\n  // Update active status if online\n  useEffect(() => {\n    if (!user.isVisible) {\n      return;\n    } else {\n      const interval = setInterval(() => {\n        dispatch(updateActive({ username: user.username, isVisible: user.isVisible, \n          isProjectsPage: true }));\n      }, 2000);\n      return () => { \n\t    clearInterval(interval);\n      }\n    }\n  }, [user.username, user.isVisible, dispatch]);\n\n  // this displays the connection dialog for the user to confirm they want to send the invite\n  const continueProject = (projectid, title, collaborator, collaboratorName, \n\t  html, css, js) => {\n    if (isOnline(collaborator)) {\n      setFromProject(true);\n      setOpenConnectionDialog(true);\n      let avatar = \"0\";\n      let isActive = true;\n      for(var i = 0; i < contacts.length; i++) {\n      if (contacts[i].username === collaborator) {\n        avatar = contacts[i].avatar\n        isActive = contacts[i].isActive\n        break;\n\t}\n      }\n      setCurrentConnection({\n        name: collaboratorName, \n        username: collaborator,\n\tavatar: avatar,\n\tisActive: isActive,\n      });\n      dispatch(selectCollab({ name: collaboratorName, username: collaborator,\n\t      avatar: avatar }));\n      dispatch(chooseProject({ projectid: projectid, \n\t      collaborator: collaborator, collaboratorName: collaboratorName, \n\t      html: html, css: css, js: js, title: title, collaboratorAvatar: avatar }));\n      setConnectionAlert(\n        `This will send an invitation to ${collaboratorName} to continue working on ${title}`\n        );\n\n    } else {\n      setOpenAlertDialog(true);\n      setAlertWarning(\n        `${collaboratorName} is currently offline. You can only edit \n\t      this project when you are both online.`\n      );\n    }\n  }\n\n  // this displays the connection dialog for the user to confirm they want to send the invite\n  const onActiveUserClick = (name, username, avatar) => {\n    setFromProject(false);\n    setOpenConnectionDialog(true);\n    setCurrentConnection({\n      name: name, \n      username: username,\n      avatar: avatar,\n      isActive: true\n    });\n    dispatch(selectCollab({ name: name, username: username, avatar: avatar }));\n    setConnectionAlert(\n      `This will CREATE a new project with ${name}.`\n    );\n  }\n\n  // this is called when the user tries to connect with a recent user\n  const onRecentUserClick = (collaborator, collaboratorName, isActive, avatar) => {\n    if (isActive) {\n      onActiveUserClick(collaboratorName, collaborator, avatar);\n      return;\n    }\n    setOpenAlertDialog(true);\n    setAlertWarning(\n      `${collaboratorName} is currently offline. You can only CREATE new projects with ACTIVE users.`\n    );\n  }\n\n  \n  // when the user want to log out\n  const handleLogout = () => {\n    dispatch(signOut());\n    dispatch(clearReducer());\n    history.push('/');\n  }\n\n  // called when user clicks on Profile\n  const displayProfile = () => {\n    setOpenProfileDialog(true);\n  }\n  const downloadProject = (title, html, css, js) => {  \n    let folderName = getFolderName(title);\n    const zip = require('jszip')();\n    let folder = zip.folder(folderName);\n\n    // add the files to the folder\n    folder.file(\"index.js\", js);\n    folder.file(\"style.css\", css);\n    folder.file(\"index.html\", html);\n\n    zip.generateAsync({type:\"blob\"})\n    .then(function(content) {\n        // see FileSaver.js\n        saveAs(content, `${folderName}.zip`);\n    });\n  }\n\n  // format the folder name to get rid of white spaces and add underscores\n  const getFolderName = (title) => {\n    let split = title.split(/[\\s,]+/);\n    split = split.filter(item => {\n      return item !== \"\";\n    }).map(word => word.toLowerCase()).join(\"_\")\n    return split;\n  }\n\n  // check if the user is with given username is online\n  const isOnline = (collaborator) => {\n    for (let user of allUsers) {\n      if (user.username === collaborator) {\n        return user.isActive;\n      }\n    }\n    return false;\n  }\n\n  // when the user clicks save after editing Profile\n  const saveProfile = (name, password, isVisible, avatar) => {\n    if (user.name !== name) {\n      dispatch(changeName({ username: user.username, name: name }));\n    }\n\n    if (user.avatar !== avatar) {\n      dispatch(changeAvatar({ username: user.username, avatar: avatar }));\n    }\n    \n    if (user.isVisible !== isVisible) {\n      dispatch(changeVisibility({ username: user.username, visibility: isVisible }));\n    }\n    \n    if (password.length >= 8 && password.length <= 60) {\n      dispatch(changePassword({ username: user.username, password: password }));\n    }\n    setOpenProfileDialog(false);\n  }\n\n  const closeConnectionDialog = (fromProject) => {\n    setOpenConnectionDialog(false);\n    if (fromProject) {\n      dispatch(clearProject());\n    }\n    setConnectionAlert(\"\");\n    setCurrentConnection({});\n  }\n\n  const closeAlertDialog = () => {\n    setAlertWarning(\"\");\n    setOpenAlertDialog(false);\n  }\n\n  const getProjectComponents = () => {\n    let projects = displayedProjects.map((project) => (\n      <ProjectCard\n        key={project.projectid}\n        title={project.title}\n        image={project.image}\n        collaboratorName={project.collaboratorName}\n        downloadProject={() => downloadProject(project.projectid, project.html, project.css, project.js)}\n        continueProject={() => continueProject(\n          project.projectid, project.title, project.collaborator, \n\t  project.collaboratorName, project.html, project.css, project.js\n        )}/>\n    ));\n    return projects;\n  }\n\n\n  // \n  const acceptCollaboration = (notification, callBack) => {\n    const updated = notifications.filter(notif => {\n      return notif !== notification\n    })\n    setNotifications(updated);\n    callBack();\n  }\n\n  // accept when a user sends collaboration request\n  const acceptCallBack = (not_type, info) => {\n    if (not_type === \"create\") {\n      let msg = JSON.stringify({ id: info, type: ACTION.REC_CREATE_PING, data: \"yes\" })\n      socket.send(msg);\n      dispatch(loadProjects(user.username))\n    } else {\n      let data = `yes-${user.avatar}`;\n      let msg = JSON.stringify({ id: info.collaborator, type: ACTION.REC_CONTINUE_PING, \n\t      data: data })\n      socket.send(msg);\n      dispatch(chooseProject({ projectid: info.projectid, \n\t  collaborator: info.collaborator, collaboratorName: info.collaboratorName, \n\t  html: info.html, css: info.css, js: info.js, title: info.title, collaboratorAvatar: info.avatar }));\n      history.push(\"/editor\");\n    }\n  }\n\n\n  // decline when a user sends collaboration request\n  const declineCallBack = (collabId, ping_type) => {\n    if (ping_type === \"create\") {\n      let msg = JSON.stringify({ id: collabId, type: ACTION.REC_CREATE_PING, data: \"no\" })\n      socket.send(msg);\n    } else {\n      let msg = JSON.stringify({ id: collabId, type: ACTION.REC_CONTINUE_PING, data: \"no\" })\n      socket.send(msg);\n    }\n\n  }\n\n  const declineCollaboration = (notification, callBack) => {\n    const updated = notifications.filter(notif => {\n      return notif !== notification\n    })\n    setNotifications(updated);\n    callBack();\n  }\n\n  useEffect(() => {\n    // disable flickering behavious on window resize\n    let resizeTimer;\n    window.addEventListener(\"resize\", () => {\n      document.body.classList.add(\"resize-animation-stopper\");\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        document.body.classList.remove(\"resize-animation-stopper\");\n      }, 400);\n    });\n  }, []);\n\n\n  useEffect(() => {\n    // set state for active and recent users with dummy users\n    setAllUsers([]);\n    setAllProjects([]);\n    let allUsersReloaded = contacts.concat(activeUsers);\n    let allProjectsReloaded = onlineProjects.concat(offlineProjects);\n    let allPaneIDS = []\n    \n    allProjectsReloaded.forEach((project) => {\n      // Setup socket for each editor pane with specified project \n      let projectid = project.projectid;\n      allPaneIDS.push(projectid);\n    });\n\n    allPaneIDS.forEach(paneID => {\n      let messageDto = JSON.stringify({ id: paneID, \n\t  type: ACTION.LOAD_INIT_PROJECTS, data: \"\" })\n      socket.send(messageDto);\n    });\n\n    setAllUsers(allUsersReloaded);\n    setAllProjects(allProjectsReloaded);\n  }, [contacts, onlineProjects, offlineProjects, activeUsers, socket]);\n\n\n  useEffect(() => {\n    let projects = allProjects.filter((project) => {\n      return project.title.includes(searchQuery) || project.title.includes(searchQuery.toUpperCase());\n    });\n\n    // setDisplayedProjects([]);\n    setDisplayedProjects(projects);\n    \n    return () => {\n      if (loadingProjects) {\n        setLoadingProjects(false);\n      }\n    }\n  }, [searchQuery, allProjects, loadingProjects]);\n\n  return (\n    <div className=\"Projects_container\">\n      <Header \n        name={user.name}\n        email={user.email}\n        handleLogout={handleLogout}\n        displayProfile={displayProfile}\n        notifications={notifications}\n        avatar={user.avatar}\n        accept={acceptCollaboration}\n        acceptCallBack={acceptCallBack}\n        declineCallBack={declineCallBack}\n        decline={declineCollaboration}\n        history={history}/>\n\n      \n      <div className=\"Projects_main\">\n        <div className=\"Projects_content\">\n          <Searchbar\n            query={searchQuery}\n            onChange={setSearchQuery}/>\n\n          <span className=\"Projects_label\">\n            Recent Projects\n          </span>\n\n          {!loadingProjects && allProjects.length === 0 && ( \n            <div className=\"card Projects_no_result\">\n              <span className=\"no_result_summary\">\n                No projects\n              </span>\n              <span className=\"no_result_message\">\n                You have not collaborated on any projects with anyone. Please select any active user\n                to start collaborating on your first project.\n              </span>\n            </div>\n          )}\n\n          {!loadingProjects && allProjects.length !== 0 && displayedProjects.length === 0 && (\n            <div className=\"card Projects_no_result\">\n              <span className=\"no_result_summary\">\n                No results found\n              </span>\n              <span className=\"no_result_message\">\n                You do not have any project that matches the given name. \n              </span>\n            </div>\n          )}\n\n          {!loadingProjects && displayedProjects.length > 0 && ( \n            <div className=\"Projects_recent\">\n              {getProjectComponents()}\n            </div>\n          )}    \n        </div>\n\n        <div className=\"Projects_sidebar\">\n          <ConnectedUsers \n            activeUsers={activeUsers}\n            contacts={contacts}\n            onActiveUserClick={onActiveUserClick}\n            onRecentUserClick={onRecentUserClick}\n            isVisible={user.isVisible}/>\n        </div>   \n      </div>\n      \n      {openConnectionDialog && (\n        <ConnectionDialog\n          collaboratorName={currentConnection.name}\n          collaboratorId={currentConnection.username}\n          isActive={user.isVisible}\n          isOpen={openConnectionDialog}\n          fromProject={fromProject}\n          closeDialog={() => closeConnectionDialog(fromProject)}\n          message={connectionAlert}\n          socket={socket}\n          history={history}/>\n      )}\n        \n      {openAlertDialog && (\n        <AlertDialog \n          isOpen={openAlertDialog}\n          closeDialog={closeAlertDialog}\n          message={alertWarning}/>\n      )} \n\n      {openProfileDialog && (\n        <ProfileDialog \n          isOpen={openProfileDialog}\n          name={user.name} \n          currentOnlineStatus={user.isVisible}\n          closeDialog={() => setOpenProfileDialog(false)}\n          saveProfile={saveProfile}\n          avatar={user.avatar}/>\n      )}      \n    </div>\n  );\n}\nexport default Projects;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createHashHistory } from \"history\";\nimport Auth from './components/Auth/Auth';\nimport Editor from './components/Editor/Editor'\nimport Projects from './components/Projects/Projects'\n\nconst history = createHashHistory();\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#6E4AB1'\n    },\n    secondary: {\n      main: '#000000'\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter history={history}>\n        <Route path=\"/\" exact component={Auth} />\n        <Route path=\"/editor\" exact component={Editor} />\n        <Route path=\"/projects\" exact component={Projects} />\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ACTION } from '../actions/types';\n \nconst initialState = {\n  activeProject: '',\n  html: '',\n  css: '',\n  js: '',\n  title: '',\n  collaboratorId: '',\n  collaboratorName: '',\n  collaboratorAvatar: '0',\n  onlineProjects: [],\n  offlineProjects: [],\n  activeUsers: [], \n  contacts: [],\n}\n\nexport const projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION.CHOOSE_PROJECT:\n      return { ...state, activeProject: action.payload.projectid, \n\t      html: action.payload.html, css: action.payload.css,\n      js: action.payload.js, collaboratorName: action.payload.collaboratorName,\n      title: action.payload.title, collaboratorId: action.payload.collaborator, \n      collaboratorAvatar: action.payload.collaboratorAvatar };\n\n    case ACTION.CLEAR_PROJECT:\n      return { ...state, html: \"\", css: \"\", js: \"\", collaboratorName: \"\",\n      title: \"\", activeProject: \"\", collaboratorId: \"\", collaboratorAvatar: \"0\" };\n\n    case ACTION.CHOOSE_USER:\n      return { ...state, collaboratorId: action.payload };\n\n    case ACTION.SELECT_COLLAB:\n      return { ...state, collaboratorId: action.payload.username, \n      collaboratorName: action.payload.name, collaboratorAvatar: action.payload.avatar };\n    \n    case ACTION.LOAD_INIT_PROJECTS: \n      return { ...state, onlineProjects: action.payload.onlineProjects,\n      offlineProjects: action.payload.offlineProjects };\n\n    case ACTION.UPDATE_PROJECTS:\n      return { ...state, onlineProjects: action.payload.onlineProjects,\n      offlineProjects: action.payload.offlineProjects };\n\n    case ACTION.UPDATE_USERS:\n      return { ...state, contacts: action.payload.contacts,\n\t      activeUsers: action.payload.activeUsers };\n\n    case ACTION.CLEAR_REDUCER:\n      return { ...state, activeProject: '', onlineProjects: [], title: '',\n      offlineProjects: [], activeUsers: [], contacts: [], html: '',\n      css: '', js: '', collaboratorId: '', \n\t      collaboratorName: '', collaboratorAvatar: \"0\" };\n\n    default:\n      return state;\n  }\n};\n\n\n","import { ACTION } from '../actions/types';\n\nconst initialState = {\n  isSignedIn: false,\n  username: '',\n  email: '',\n  name: '',\n  isVisible: true,\n  avatar: \"0\",\n}\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n\t  case ACTION.SIGN_IN:\n      return { ...state, isSignedIn: true, username: action.payload.username, \n\t      email: action.payload.email, name: action.payload.name, avatar: action.payload.avatar, isVisible: action.payload.isVisible};\n    case ACTION.SIGN_OUT:\n      return { ...state, isSignedIn: false, username: '', email: '', \n\t      activeProject: '',  avatar: \"0\" };\n    case ACTION.CHANGE_VISIBILITY:\n      return { ...state, isVisible: action.payload };\n    case ACTION.CHANGE_NAME:\n      return { ...state, name: action.payload };\n      case ACTION.CHANGE_AVATAR:\n        return { ...state, avatar: action.payload };\n    default:\n      return state;\n  }\n}\n","import { projectReducer } from './projectReducer';\nimport { userReducer } from './userReducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n  projectReducer,\n  userReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './main/webapp/App.js';\nimport rootReducer from './main/webapp/reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}